#pragma once
#include <BasicConstants.h>
void JassNativesInit();
//Common Jass Natives
typedef int(__cdecl* GAME_Deg2Rad) (float*);
typedef int(__cdecl* GAME_Rad2Deg) (float*);
typedef int(__cdecl* GAME_Sin) (float*);
typedef int(__cdecl* GAME_Cos) (float*);
typedef int(__cdecl* GAME_Tan) (float*);
typedef int(__cdecl* GAME_Asin) (float*);
typedef int(__cdecl* GAME_Acos) (float*);
typedef int(__cdecl* GAME_Atan) (float*);
typedef int(__cdecl* GAME_Atan2) (float*, float*);
typedef int(__cdecl* GAME_SquareRoot) (float*);
typedef int(__cdecl* GAME_Pow) (float*, float*);
typedef int(__cdecl* GAME_I2R) (int);
typedef int(__cdecl* GAME_R2I) (float*);
typedef jSTRING(__cdecl* GAME_I2S) (int);
typedef jSTRING(__cdecl* GAME_R2S) (float*);
typedef jSTRING(__cdecl* GAME_R2SW) (float*, int, int);
typedef int(__cdecl* GAME_S2I) (jSTRING);
typedef int(__cdecl* GAME_S2R) (jSTRING);
typedef int(__cdecl* GAME_GetHandleId) (jHANDLE);
typedef jSTRING(__cdecl* GAME_SubString) (jSTRING, int, int);
typedef int(__cdecl* GAME_StringLength) (jSTRING);
typedef jSTRING(__cdecl* GAME_StringCase) (jSTRING, int);
typedef int(__cdecl* GAME_StringHash) (jSTRING);
typedef jSTRING(__cdecl* GAME_GetLocalizedString) (jSTRING);
typedef int(__cdecl* GAME_GetLocalizedHotkey) (jSTRING);
typedef jHANDLE(__cdecl* GAME_ConvertRace) (int);
typedef jHANDLE(__cdecl* GAME_ConvertAllianceType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertRacePref) (int);
typedef jHANDLE(__cdecl* GAME_ConvertIGameState) (int);
typedef jHANDLE(__cdecl* GAME_ConvertFGameState) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlayerState) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlayerScore) (int);
typedef jHANDLE(__cdecl* GAME_ConvertStartLocPrio) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlayerGameResult) (int);
typedef jHANDLE(__cdecl* GAME_ConvertUnitState) (int);
typedef jHANDLE(__cdecl* GAME_ConvertAIDifficulty) (int);
typedef jHANDLE(__cdecl* GAME_ConvertGameEvent) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlayerEvent) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlayerUnitEvent) (int);
typedef jHANDLE(__cdecl* GAME_ConvertUnitEvent) (int);
typedef jHANDLE(__cdecl* GAME_ConvertWidgetEvent) (int);
typedef jHANDLE(__cdecl* GAME_ConvertDialogEvent) (int);
typedef jHANDLE(__cdecl* GAME_ConvertLimitOp) (int);
typedef jHANDLE(__cdecl* GAME_ConvertUnitType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertGameSpeed) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlacement) (int);
typedef jHANDLE(__cdecl* GAME_ConvertGameDifficulty) (int);
typedef jHANDLE(__cdecl* GAME_ConvertGameType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertMapFlag) (int);
typedef jHANDLE(__cdecl* GAME_ConvertMapVisibility) (int);
typedef jHANDLE(__cdecl* GAME_ConvertMapSetting) (int);
typedef jHANDLE(__cdecl* GAME_ConvertMapDensity) (int);
typedef jHANDLE(__cdecl* GAME_ConvertMapControl) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlayerColor) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPlayerSlotState) (int);
typedef jHANDLE(__cdecl* GAME_ConvertVolumeGroup) (int);
typedef jHANDLE(__cdecl* GAME_ConvertCameraField) (int);
typedef jHANDLE(__cdecl* GAME_ConvertBlendMode) (int);
typedef jHANDLE(__cdecl* GAME_ConvertRarityControl) (int);
typedef jHANDLE(__cdecl* GAME_ConvertTexMapFlags) (int);
typedef jHANDLE(__cdecl* GAME_ConvertFogState) (int);
typedef jHANDLE(__cdecl* GAME_ConvertEffectType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertVersion) (int);
typedef jHANDLE(__cdecl* GAME_ConvertItemType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertAttackType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertDamageType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertWeaponType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertSoundType) (int);
typedef jHANDLE(__cdecl* GAME_ConvertPathingType) (int);
typedef void(__cdecl* GAME_SetMapName) (jSTRING);
typedef void(__cdecl* GAME_SetMapDescription) (jSTRING);
typedef void(__cdecl* GAME_SetTeams) (int);
typedef void(__cdecl* GAME_SetPlayers) (int);
typedef void(__cdecl* GAME_SetGameTypeSupported) (jHANDLE, int);
typedef void(__cdecl* GAME_SetMapFlag) (jHANDLE, int);
typedef void(__cdecl* GAME_SetGameSpeed) (jHANDLE);
typedef void(__cdecl* GAME_SetGamePlacement) (jHANDLE);
typedef void(__cdecl* GAME_SetGameDifficulty) (jHANDLE);
typedef void(__cdecl* GAME_SetResourceDensity) (jHANDLE);
typedef void(__cdecl* GAME_SetCreatureDensity) (jHANDLE);
typedef void(__cdecl* GAME_DefineStartLocation) (int, float*, float*);
typedef void(__cdecl* GAME_DefineStartLocationLoc) (int, jHANDLE);
typedef void(__cdecl* GAME_SetStartLocPrioCount) (int, int);
typedef void(__cdecl* GAME_SetStartLocPrio) (int, int, int, jHANDLE);
typedef int(__cdecl* GAME_GetStartLocPrioSlot) (int, int);
typedef jHANDLE(__cdecl* GAME_GetStartLocPrio) (int, int);
typedef int(__cdecl* GAME_GetTeams) ();
typedef int(__cdecl* GAME_GetPlayers) ();
typedef bool(__cdecl* GAME_IsGameTypeSupported) (jHANDLE);
typedef bool(__cdecl* GAME_IsMapFlagSet) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetGameTypeSelected) ();
typedef jHANDLE(__cdecl* GAME_GetGamePlacement) ();
typedef jHANDLE(__cdecl* GAME_GetGameSpeed) ();
typedef jHANDLE(__cdecl* GAME_GetGameDifficulty) ();
typedef jHANDLE(__cdecl* GAME_GetResourceDensity) ();
typedef jHANDLE(__cdecl* GAME_GetCreatureDensity) ();
typedef int(__cdecl* GAME_GetStartLocationX) (int);
typedef int(__cdecl* GAME_GetStartLocationY) (int);
typedef jHANDLE(__cdecl* GAME_GetStartLocationLoc) (int);
typedef void(__cdecl* GAME_SetPlayerTeam) (jHANDLE, int);
typedef void(__cdecl* GAME_SetPlayerStartLocation) (jHANDLE, int);
typedef void(__cdecl* GAME_ForcePlayerStartLocation) (jHANDLE, int);
typedef void(__cdecl* GAME_SetPlayerAlliance) (jHANDLE, jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetPlayerTaxRate) (jHANDLE, jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetPlayerRacePreference) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_SetPlayerRaceSelectable) (jHANDLE, int);
typedef void(__cdecl* GAME_SetPlayerController) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_SetPlayerColor) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_SetPlayerOnScoreScreen) (jHANDLE, int);
typedef void(__cdecl* GAME_SetPlayerName) (jHANDLE, jSTRING);
typedef int(__cdecl* GAME_GetPlayerTeam) (jHANDLE);
typedef jSTRING(__cdecl* GAME_GetPlayerName) (jHANDLE);
typedef int(__cdecl* GAME_GetPlayerStartLocation) (jHANDLE);
typedef int(__cdecl* GAME_GetPlayerStartLocationX) (jHANDLE);
typedef int(__cdecl* GAME_GetPlayerStartLocationY) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetPlayerColor) (jHANDLE);
typedef bool(__cdecl* GAME_GetPlayerSelectable) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetPlayerController) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetPlayerSlotState) (jHANDLE);
typedef int(__cdecl* GAME_GetPlayerTaxRate) (jHANDLE, jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsPlayerRacePrefSet) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_Location) (float*, float*);
typedef void(__cdecl* GAME_RemoveLocation) (jHANDLE);
typedef void(__cdecl* GAME_MoveLocation) (jHANDLE, float*, float*);
typedef int(__cdecl* GAME_GetLocationX) (jHANDLE);
typedef int(__cdecl* GAME_GetLocationY) (jHANDLE);
typedef int(__cdecl* GAME_GetLocationZ) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_CreateTimer) ();
typedef void(__cdecl* GAME_DestroyTimer) (jHANDLE);
typedef void(__cdecl* GAME_TimerStart) (jHANDLE, float*, int, jCODE);
typedef int(__cdecl* GAME_TimerGetTimeout) (jHANDLE);
typedef int(__cdecl* GAME_TimerGetElapsed) (jHANDLE);
typedef int(__cdecl* GAME_TimerGetRemaining) (jHANDLE);
typedef void(__cdecl* GAME_PauseTimer) (jHANDLE);
typedef void(__cdecl* GAME_ResumeTimer) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetExpiredTimer) ();
typedef jHANDLE(__cdecl* GAME_Condition) (jCODE);
typedef void(__cdecl* GAME_DestroyCondition) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_Filter) (jCODE);
typedef void(__cdecl* GAME_DestroyFilter) (jHANDLE);
typedef void(__cdecl* GAME_DestroyBoolExpr) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_And) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_Or) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_Not) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_CreateRegion) ();
typedef void(__cdecl* GAME_RemoveRegion) (jHANDLE);
typedef void(__cdecl* GAME_RegionAddRect) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_RegionClearRect) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_RegionAddCell) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_RegionAddCellAtLoc) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_RegionClearCell) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_RegionClearCellAtLoc) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitInRegion) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsPointInRegion) (jHANDLE, float*, float*);
typedef bool(__cdecl* GAME_IsLocationInRegion) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_Rect) (float*, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_RectFromLoc) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_RemoveRect) (jHANDLE);
typedef void(__cdecl* GAME_SetRect) (jHANDLE, float*, float*, float*, float*);
typedef void(__cdecl* GAME_SetRectFromLoc) (jHANDLE, jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_GetRectCenterX) (jHANDLE);
typedef int(__cdecl* GAME_GetRectCenterY) (jHANDLE);
typedef void(__cdecl* GAME_MoveRectTo) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_MoveRectToLoc) (jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_GetRectMinX) (jHANDLE);
typedef int(__cdecl* GAME_GetRectMinY) (jHANDLE);
typedef int(__cdecl* GAME_GetRectMaxX) (jHANDLE);
typedef int(__cdecl* GAME_GetRectMaxY) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetWorldBounds) ();
typedef void(__cdecl* GAME_SetFogStateRect) (jHANDLE, jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetFogStateRadius) (jHANDLE, jHANDLE, float*, float*, float*, int);
typedef void(__cdecl* GAME_SetFogStateRadiusLoc) (jHANDLE, jHANDLE, jHANDLE, float*, int);
typedef void(__cdecl* GAME_FogMaskEnable) (int);
typedef bool(__cdecl* GAME_IsFogMaskEnabled) ();
typedef void(__cdecl* GAME_FogEnable) (int);
typedef bool(__cdecl* GAME_IsFogEnabled) ();
typedef jHANDLE(__cdecl* GAME_CreateFogModifierRect) (jHANDLE, jHANDLE, jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_CreateFogModifierRadius) (jHANDLE, jHANDLE, float*, float*, float*, int, int);
typedef jHANDLE(__cdecl* GAME_CreateFogModifierRadiusLoc) (jHANDLE, jHANDLE, jHANDLE, float*, int, int);
typedef void(__cdecl* GAME_DestroyFogModifier) (jHANDLE);
typedef void(__cdecl* GAME_FogModifierStart) (jHANDLE);
typedef void(__cdecl* GAME_FogModifierStop) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_CreateTrigger) ();
typedef void(__cdecl* GAME_DestroyTrigger) (jHANDLE);
typedef void(__cdecl* GAME_ResetTrigger) (jHANDLE);
typedef void(__cdecl* GAME_EnableTrigger) (jHANDLE);
typedef void(__cdecl* GAME_DisableTrigger) (jHANDLE);
typedef bool(__cdecl* GAME_IsTriggerEnabled) (jHANDLE);
typedef void(__cdecl* GAME_TriggerWaitOnSleeps) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsTriggerWaitOnSleeps) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterVariableEvent) (jHANDLE, jSTRING, jHANDLE, float*);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterTimerEvent) (jHANDLE, float*, int);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterTimerExpireEvent) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterGameStateEvent) (jHANDLE, jHANDLE, jHANDLE, float*);
typedef jHANDLE(__cdecl* GAME_GetEventGameState) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterDialogEvent) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterDialogButtonEvent) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetClickedButton) ();
typedef jHANDLE(__cdecl* GAME_GetClickedDialog) ();
typedef int(__cdecl* GAME_GetTournamentFinishSoonTimeRemaining) ();
typedef int(__cdecl* GAME_GetTournamentFinishNowRule) ();
typedef jHANDLE(__cdecl* GAME_GetTournamentFinishNowPlayer) ();
typedef int(__cdecl* GAME_GetTournamentScore) (jHANDLE);
typedef jSTRING(__cdecl* GAME_GetSaveBasicFilename) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterGameEvent) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetWinningPlayer) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterPlayerStateEvent) (jHANDLE, jHANDLE, jHANDLE, jHANDLE, float*);
typedef jHANDLE(__cdecl* GAME_GetEventPlayerState) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterPlayerEvent) (jHANDLE, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterPlayerUnitEvent) (jHANDLE, jHANDLE, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetAttacker) ();
typedef jHANDLE(__cdecl* GAME_GetRescuer) ();
typedef jHANDLE(__cdecl* GAME_GetDyingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetKillingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetDecayingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetConstructingStructure) ();
typedef jHANDLE(__cdecl* GAME_GetCancelledStructure) ();
typedef jHANDLE(__cdecl* GAME_GetConstructedStructure) ();
typedef int(__cdecl* GAME_GetTrainedUnitType) ();
typedef jHANDLE(__cdecl* GAME_GetResearchingUnit) ();
typedef int(__cdecl* GAME_GetResearched) ();
typedef jHANDLE(__cdecl* GAME_GetTrainedUnit) ();
typedef jHANDLE(__cdecl* GAME_GetSellingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetSoldUnit) ();
typedef jHANDLE(__cdecl* GAME_GetBuyingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetSoldItem) ();
typedef jHANDLE(__cdecl* GAME_GetChangingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetChangingUnitPrevOwner) ();
typedef jHANDLE(__cdecl* GAME_GetDetectedUnit) ();
typedef jHANDLE(__cdecl* GAME_GetOrderedUnit) ();
typedef int(__cdecl* GAME_OrderId) (jSTRING);
typedef jSTRING(__cdecl* GAME_OrderId2String) (int);
typedef int(__cdecl* GAME_AbilityId) (jSTRING);
typedef jSTRING(__cdecl* GAME_AbilityId2String) (int);
typedef int(__cdecl* GAME_UnitId) (jSTRING);
typedef jSTRING(__cdecl* GAME_UnitId2String) (int);
typedef jSTRING(__cdecl* GAME_GetObjectName) (int);
typedef int(__cdecl* GAME_GetIssuedOrderId) ();
typedef int(__cdecl* GAME_GetOrderPointX) ();
typedef int(__cdecl* GAME_GetOrderPointY) ();
typedef jHANDLE(__cdecl* GAME_GetOrderPointLoc) ();
typedef jHANDLE(__cdecl* GAME_GetOrderTarget) ();
typedef jHANDLE(__cdecl* GAME_GetOrderTargetDestructable) ();
typedef jHANDLE(__cdecl* GAME_GetOrderTargetItem) ();
typedef jHANDLE(__cdecl* GAME_GetOrderTargetUnit) ();
typedef jHANDLE(__cdecl* GAME_GetSpellAbilityUnit) ();
typedef int(__cdecl* GAME_GetSpellAbilityId) ();
typedef jHANDLE(__cdecl* GAME_GetSpellAbility) ();
typedef jHANDLE(__cdecl* GAME_GetSpellTargetLoc) ();
typedef int(__cdecl* GAME_GetSpellTargetX) ();
typedef int(__cdecl* GAME_GetSpellTargetY) ();
typedef jHANDLE(__cdecl* GAME_GetSpellTargetDestructable) ();
typedef jHANDLE(__cdecl* GAME_GetSpellTargetItem) ();
typedef jHANDLE(__cdecl* GAME_GetSpellTargetUnit) ();
typedef jHANDLE(__cdecl* GAME_GetLevelingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetLearningUnit) ();
typedef int(__cdecl* GAME_GetLearnedSkill) ();
typedef int(__cdecl* GAME_GetLearnedSkillLevel) ();
typedef jHANDLE(__cdecl* GAME_GetRevivableUnit) ();
typedef jHANDLE(__cdecl* GAME_GetRevivingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetSummoningUnit) ();
typedef jHANDLE(__cdecl* GAME_GetSummonedUnit) ();
typedef jHANDLE(__cdecl* GAME_GetTransportUnit) ();
typedef jHANDLE(__cdecl* GAME_GetLoadedUnit) ();
typedef jHANDLE(__cdecl* GAME_GetManipulatingUnit) ();
typedef jHANDLE(__cdecl* GAME_GetManipulatedItem) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterPlayerAllianceChange) (jHANDLE, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterPlayerChatEvent) (jHANDLE, jHANDLE, jSTRING, int);
typedef jSTRING(__cdecl* GAME_GetEventPlayerChatString) ();
typedef jSTRING(__cdecl* GAME_GetEventPlayerChatStringMatched) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterUnitStateEvent) (jHANDLE, jHANDLE, jHANDLE, jHANDLE, float*);
typedef jHANDLE(__cdecl* GAME_GetEventUnitState) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterDeathEvent) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterUnitEvent) (jHANDLE, jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_GetEventDamage) ();
typedef jHANDLE(__cdecl* GAME_GetEventDamageSource) ();
typedef jHANDLE(__cdecl* GAME_GetEventDetectingPlayer) ();
typedef jHANDLE(__cdecl* GAME_GetEventTargetUnit) ();
typedef jHANDLE(__cdecl* GAME_TriggerRegisterFilterUnitEvent) (jHANDLE, jHANDLE, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterUnitInRange) (jHANDLE, jHANDLE, float*, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterEnterRegion) (jHANDLE, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterLeaveRegion) (jHANDLE, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetTriggeringRegion) ();
typedef jHANDLE(__cdecl* GAME_GetEnteringUnit) ();
typedef jHANDLE(__cdecl* GAME_GetLeavingUnit) ();
typedef jHANDLE(__cdecl* GAME_TriggerAddCondition) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_TriggerRemoveCondition) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_TriggerClearConditions) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerAddAction) (jHANDLE, jCODE);
typedef void(__cdecl* GAME_TriggerRemoveAction) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_TriggerClearActions) (jHANDLE);
typedef void(__cdecl* GAME_TriggerSleepAction) (float*);
typedef void(__cdecl* GAME_TriggerWaitForSound) (jHANDLE, float*);
typedef void(__cdecl* GAME_TriggerExecute) (jHANDLE);
typedef void(__cdecl* GAME_TriggerExecuteWait) (jHANDLE);
typedef bool(__cdecl* GAME_TriggerEvaluate) (jHANDLE);
typedef void(__cdecl* GAME_TriggerSyncStart) ();
typedef void(__cdecl* GAME_TriggerSyncReady) ();
typedef jHANDLE(__cdecl* GAME_GetTriggerWidget) ();
typedef jHANDLE(__cdecl* GAME_GetTriggerDestructable) ();
typedef jHANDLE(__cdecl* GAME_GetTriggerUnit) ();
typedef jHANDLE(__cdecl* GAME_GetTriggerPlayer) ();
typedef jHANDLE(__cdecl* GAME_GetTriggeringTrigger) ();
typedef jHANDLE(__cdecl* GAME_GetTriggerEventId) ();
typedef int(__cdecl* GAME_GetTriggerEvalCount) (jHANDLE);
typedef int(__cdecl* GAME_GetTriggerExecCount) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetFilterUnit) ();
typedef jHANDLE(__cdecl* GAME_GetEnumUnit) ();
typedef jHANDLE(__cdecl* GAME_GetEnumPlayer) ();
typedef jHANDLE(__cdecl* GAME_GetFilterPlayer) ();
typedef jHANDLE(__cdecl* GAME_GetFilterDestructable) ();
typedef jHANDLE(__cdecl* GAME_GetEnumDestructable) ();
typedef jHANDLE(__cdecl* GAME_GetFilterItem) ();
typedef jHANDLE(__cdecl* GAME_GetEnumItem) ();
typedef jHANDLE(__cdecl* GAME_CreateGroup) ();
typedef void(__cdecl* GAME_DestroyGroup) (jHANDLE);
typedef void(__cdecl* GAME_GroupAddUnit) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_GroupRemoveUnit) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_GroupClear) (jHANDLE);
typedef void(__cdecl* GAME_GroupEnumUnitsOfType) (jHANDLE, jSTRING, jHANDLE);
typedef void(__cdecl* GAME_GroupEnumUnitsOfTypeCounted) (jHANDLE, jSTRING, jHANDLE, int);
typedef void(__cdecl* GAME_GroupEnumUnitsInRect) (jHANDLE, jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_GroupEnumUnitsInRectCounted) (jHANDLE, jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_GroupEnumUnitsOfPlayer) (jHANDLE, jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_GroupEnumUnitsInRange) (jHANDLE, float*, float*, float*, jHANDLE);
typedef void(__cdecl* GAME_GroupEnumUnitsInRangeOfLoc) (jHANDLE, jHANDLE, float*, jHANDLE);
typedef void(__cdecl* GAME_GroupEnumUnitsInRangeCounted) (jHANDLE, float*, float*, float*, jHANDLE, int);
typedef void(__cdecl* GAME_GroupEnumUnitsInRangeOfLocCounted) (jHANDLE, jHANDLE, float*, jHANDLE, int);
typedef void(__cdecl* GAME_GroupEnumUnitsSelected) (jHANDLE, jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_GroupImmediateOrder) (jHANDLE, jSTRING);
typedef bool(__cdecl* GAME_GroupImmediateOrderById) (jHANDLE, int);
typedef bool(__cdecl* GAME_GroupPointOrder) (jHANDLE, jSTRING, float*, float*);
typedef bool(__cdecl* GAME_GroupPointOrderLoc) (jHANDLE, jSTRING, jHANDLE);
typedef bool(__cdecl* GAME_GroupPointOrderById) (jHANDLE, int, float*, float*);
typedef bool(__cdecl* GAME_GroupPointOrderByIdLoc) (jHANDLE, int, jHANDLE);
typedef bool(__cdecl* GAME_GroupTargetOrder) (jHANDLE, jSTRING, jHANDLE);
typedef bool(__cdecl* GAME_GroupTargetOrderById) (jHANDLE, int, jHANDLE);
typedef void(__cdecl* GAME_ForGroup) (jHANDLE, jCODE);
typedef jHANDLE(__cdecl* GAME_FirstOfGroup) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_CreateForce) ();
typedef void(__cdecl* GAME_DestroyForce) (jHANDLE);
typedef void(__cdecl* GAME_ForceAddPlayer) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_ForceRemovePlayer) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_ForceClear) (jHANDLE);
typedef void(__cdecl* GAME_ForceEnumPlayers) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_ForceEnumPlayersCounted) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_ForceEnumAllies) (jHANDLE, jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_ForceEnumEnemies) (jHANDLE, jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_ForForce) (jHANDLE, jCODE);
typedef int(__cdecl* GAME_GetWidgetLife) (jHANDLE);
typedef void(__cdecl* GAME_SetWidgetLife) (jHANDLE, float*);
typedef int(__cdecl* GAME_GetWidgetX) (jHANDLE);
typedef int(__cdecl* GAME_GetWidgetY) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_CreateDestructable) (int, float*, float*, float*, float*, int);
typedef jHANDLE(__cdecl* GAME_CreateDestructableZ) (int, float*, float*, float*, float*, float*, int);
typedef jHANDLE(__cdecl* GAME_CreateDeadDestructable) (int, float*, float*, float*, float*, int);
typedef jHANDLE(__cdecl* GAME_CreateDeadDestructableZ) (int, float*, float*, float*, float*, float*, int);
typedef void(__cdecl* GAME_RemoveDestructable) (jHANDLE);
typedef void(__cdecl* GAME_KillDestructable) (jHANDLE);
typedef void(__cdecl* GAME_SetDestructableInvulnerable) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsDestructableInvulnerable) (jHANDLE);
typedef void(__cdecl* GAME_EnumDestructablesInRect) (jHANDLE, jHANDLE, jCODE);
typedef int(__cdecl* GAME_GetDestructableTypeId) (jHANDLE);
typedef int(__cdecl* GAME_GetDestructableX) (jHANDLE);
typedef int(__cdecl* GAME_GetDestructableY) (jHANDLE);
typedef void(__cdecl* GAME_SetDestructableLife) (jHANDLE, float*);
typedef int(__cdecl* GAME_GetDestructableLife) (jHANDLE);
typedef void(__cdecl* GAME_SetDestructableMaxLife) (jHANDLE, float*);
typedef int(__cdecl* GAME_GetDestructableMaxLife) (jHANDLE);
typedef void(__cdecl* GAME_DestructableRestoreLife) (jHANDLE, float*, int);
typedef void(__cdecl* GAME_QueueDestructableAnimation) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_SetDestructableAnimation) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_SetDestructableAnimationSpeed) (jHANDLE, float*);
typedef void(__cdecl* GAME_ShowDestructable) (jHANDLE, int);
typedef int(__cdecl* GAME_GetDestructableOccluderHeight) (jHANDLE);
typedef void(__cdecl* GAME_SetDestructableOccluderHeight) (jHANDLE, float*);
typedef jSTRING(__cdecl* GAME_GetDestructableName) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_CreateUnit) (jHANDLE, int, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_CreateUnitByName) (jHANDLE, jSTRING, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_CreateUnitAtLoc) (jHANDLE, int, jHANDLE, float*);
typedef jHANDLE(__cdecl* GAME_CreateUnitAtLocByName) (jHANDLE, jSTRING, jHANDLE, float*);
typedef jHANDLE(__cdecl* GAME_CreateCorpse) (jHANDLE, int, float*, float*, float*);
typedef int(__cdecl* GAME_GetUnitState) (jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_GetUnitFoodUsed) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitFoodMade) (jHANDLE);
typedef int(__cdecl* GAME_GetFoodMade) (int);
typedef int(__cdecl* GAME_GetFoodUsed) (int);
typedef void(__cdecl* GAME_SetUnitUseFood) (jHANDLE, int);
typedef int(__cdecl* GAME_GetUnitX) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitY) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetUnitLoc) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetUnitRallyPoint) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetUnitRallyUnit) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetUnitRallyDestructable) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitFacing) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitMoveSpeed) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitDefaultMoveSpeed) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitTypeId) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetUnitRace) (jHANDLE);
typedef jSTRING(__cdecl* GAME_GetUnitName) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitPointValue) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitPointValueByType) (int);
typedef void(__cdecl* GAME_SetUnitX) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitY) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitPosition) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetUnitPositionLoc) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_SetUnitFacing) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitFacingTimed) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetUnitFlyHeight) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetUnitMoveSpeed) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitTurnSpeed) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitPropWindow) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitCreepGuard) (jHANDLE, int);
typedef int(__cdecl* GAME_GetUnitAcquireRange) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitTurnSpeed) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitPropWindow) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitFlyHeight) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitDefaultAcquireRange) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitDefaultTurnSpeed) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitDefaultPropWindow) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitDefaultFlyHeight) (jHANDLE);
typedef void(__cdecl* GAME_SetUnitAcquireRange) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitState) (jHANDLE, jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitOwner) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetUnitRescuable) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetUnitRescueRange) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitColor) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_QueueUnitAnimation) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_SetUnitAnimation) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_SetUnitAnimationWithRarity) (jHANDLE, jSTRING, jHANDLE);
typedef void(__cdecl* GAME_SetUnitAnimationByIndex) (jHANDLE, int);
typedef void(__cdecl* GAME_AddUnitAnimationProperties) (jHANDLE, jSTRING, int);
typedef void(__cdecl* GAME_SetUnitScale) (jHANDLE, float*, float*, float*);
typedef void(__cdecl* GAME_SetUnitTimeScale) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitBlendTime) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetUnitVertexColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_SetUnitLookAt) (jHANDLE, jSTRING, jHANDLE, float*, float*, float*);
typedef void(__cdecl* GAME_SetUnitPathing) (jHANDLE, int);
typedef void(__cdecl* GAME_ResetUnitLookAt) (jHANDLE);
typedef void(__cdecl* GAME_SetHeroStr) (jHANDLE, int, int);
typedef void(__cdecl* GAME_SetHeroAgi) (jHANDLE, int, int);
typedef void(__cdecl* GAME_SetHeroInt) (jHANDLE, int, int);
typedef int(__cdecl* GAME_GetHeroStr) (jHANDLE, int);
typedef int(__cdecl* GAME_GetHeroAgi) (jHANDLE, int);
typedef int(__cdecl* GAME_GetHeroInt) (jHANDLE, int);
typedef int(__cdecl* GAME_GetHeroSkillPoints) (jHANDLE);
typedef bool(__cdecl* GAME_UnitStripHeroLevel) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitModifySkillPoints) (jHANDLE, int);
typedef int(__cdecl* GAME_GetHeroXP) (jHANDLE);
typedef void(__cdecl* GAME_SetHeroXP) (jHANDLE, int, int);
typedef void(__cdecl* GAME_AddHeroXP) (jHANDLE, int, int);
typedef void(__cdecl* GAME_SetHeroLevel) (jHANDLE, int, int);
typedef int(__cdecl* GAME_GetHeroLevel) (jHANDLE);
typedef int(__cdecl* GAME_GetUnitLevel) (jHANDLE);
typedef jSTRING(__cdecl* GAME_GetHeroProperName) (jHANDLE);
typedef void(__cdecl* GAME_SuspendHeroXP) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsSuspendedXP) (jHANDLE);
typedef void(__cdecl* GAME_SelectHeroSkill) (jHANDLE, int);
typedef int(__cdecl* GAME_GetUnitAbilityLevel) (jHANDLE, int);
typedef bool(__cdecl* GAME_ReviveHero) (jHANDLE, float*, float*, int);
typedef bool(__cdecl* GAME_ReviveHeroLoc) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetUnitExploded) (jHANDLE, int);
typedef void(__cdecl* GAME_SetUnitInvulnerable) (jHANDLE, int);
typedef void(__cdecl* GAME_PauseUnit) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsUnitPaused) (jHANDLE);
typedef bool(__cdecl* GAME_UnitAddItem) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_UnitAddItemById) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitAddItemToSlotById) (jHANDLE, int, int);
typedef void(__cdecl* GAME_UnitRemoveItem) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_UnitRemoveItemFromSlot) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitHasItem) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_UnitItemInSlot) (jHANDLE, int);
typedef int(__cdecl* GAME_UnitInventorySize) (jHANDLE);
typedef bool(__cdecl* GAME_UnitDropItemPoint) (jHANDLE, jHANDLE, float*, float*);
typedef bool(__cdecl* GAME_UnitDropItemSlot) (jHANDLE, jHANDLE, int);
typedef bool(__cdecl* GAME_UnitDropItemTarget) (jHANDLE, jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_UnitUseItem) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_UnitUseItemPoint) (jHANDLE, jHANDLE, float*, float*);
typedef bool(__cdecl* GAME_UnitUseItemTarget) (jHANDLE, jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_GetUnitCurrentOrder) (jHANDLE);
typedef void(__cdecl* GAME_SetResourceAmount) (jHANDLE, int);
typedef void(__cdecl* GAME_AddResourceAmount) (jHANDLE, int);
typedef int(__cdecl* GAME_GetResourceAmount) (jHANDLE);
typedef void(__cdecl* GAME_SelectUnit) (jHANDLE, int);
typedef void(__cdecl* GAME_ClearSelection) ();
typedef void(__cdecl* GAME_UnitAddIndicator) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_AddIndicator) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_KillUnit) (jHANDLE);
typedef void(__cdecl* GAME_RemoveUnit) (jHANDLE);
typedef void(__cdecl* GAME_ShowUnit) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsUnitInForce) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitInGroup) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitOwnedByPlayer) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitAlly) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitEnemy) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitVisible) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitDetected) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitInvisible) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitFogged) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitMasked) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitSelected) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitRace) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitType) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnit) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitInRange) (jHANDLE, jHANDLE, float*);
typedef bool(__cdecl* GAME_IsUnitInRangeXY) (jHANDLE, float*, float*, float*);
typedef bool(__cdecl* GAME_IsUnitInRangeLoc) (jHANDLE, jHANDLE, float*);
typedef bool(__cdecl* GAME_IsUnitHidden) (jHANDLE);
typedef bool(__cdecl* GAME_IsUnitIllusion) (jHANDLE);
typedef bool(__cdecl* GAME_IsUnitInTransport) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsUnitLoaded) (jHANDLE);
typedef bool(__cdecl* GAME_IsHeroUnitId) (int);
typedef bool(__cdecl* GAME_IsUnitIdType) (int, jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetOwningPlayer) (jHANDLE);
typedef void(__cdecl* GAME_UnitShareVision) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_UnitSuspendDecay) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitAddType) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_UnitRemoveType) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_UnitAddAbility) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitRemoveAbility) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitMakeAbilityPermanent) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_UnitHasBuffsEx) (jHANDLE, int, int, int, int, int, int, int);
typedef int(__cdecl* GAME_UnitCountBuffsEx) (jHANDLE, int, int, int, int, int, int, int);
typedef void(__cdecl* GAME_UnitRemoveBuffs) (jHANDLE, int, int);
typedef void(__cdecl* GAME_UnitRemoveBuffsEx) (jHANDLE, int, int, int, int, int, int, int);
typedef void(__cdecl* GAME_UnitAddSleep) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitCanSleep) (jHANDLE);
typedef void(__cdecl* GAME_UnitAddSleepPerm) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitCanSleepPerm) (jHANDLE);
typedef bool(__cdecl* GAME_UnitIsSleeping) (jHANDLE);
typedef void(__cdecl* GAME_UnitWakeUp) (jHANDLE);
typedef void(__cdecl* GAME_UnitApplyTimedLife) (jHANDLE, int, float*);
typedef bool(__cdecl* GAME_UnitIgnoreAlarm) (jHANDLE, int);
typedef bool(__cdecl* GAME_UnitIgnoreAlarmToggled) (jHANDLE);
typedef bool(__cdecl* GAME_UnitDamagePoint) (jHANDLE, float*, float*, float*, float*, float*, int, int, jHANDLE, jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_UnitDamageTarget) (jHANDLE, jHANDLE, float*, int, int, jHANDLE, jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_DecUnitAbilityLevel) (jHANDLE, int);
typedef int(__cdecl* GAME_IncUnitAbilityLevel) (jHANDLE, int);
typedef int(__cdecl* GAME_SetUnitAbilityLevel) (jHANDLE, int, int);
typedef void(__cdecl* GAME_UnitResetCooldown) (jHANDLE);
typedef void(__cdecl* GAME_UnitSetConstructionProgress) (jHANDLE, int);
typedef void(__cdecl* GAME_UnitSetUpgradeProgress) (jHANDLE, int);
typedef void(__cdecl* GAME_UnitPauseTimedLife) (jHANDLE, int);
typedef void(__cdecl* GAME_UnitSetUsesAltIcon) (jHANDLE, int);
typedef bool(__cdecl* GAME_IssueImmediateOrderById) (jHANDLE, int);
typedef bool(__cdecl* GAME_IssuePointOrderById) (jHANDLE, int, float*, float*);
typedef bool(__cdecl* GAME_IssuePointOrderByIdLoc) (jHANDLE, int, jHANDLE);
typedef bool(__cdecl* GAME_IssueTargetOrderById) (jHANDLE, int, jHANDLE);
typedef bool(__cdecl* GAME_IssueInstantPointOrderById) (jHANDLE, int, float*, float*, jHANDLE);
typedef bool(__cdecl* GAME_IssueInstantTargetOrderById) (jHANDLE, int, jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IssueBuildOrderById) (jHANDLE, int, float*, float*);
typedef bool(__cdecl* GAME_IssueNeutralImmediateOrderById) (jHANDLE, jHANDLE, int);
typedef bool(__cdecl* GAME_IssueNeutralPointOrderById) (jHANDLE, jHANDLE, int, float*, float*);
typedef bool(__cdecl* GAME_IssueNeutralTargetOrderById) (jHANDLE, jHANDLE, int, jHANDLE);
typedef bool(__cdecl* GAME_IssueImmediateOrder) (jHANDLE, jSTRING);
typedef bool(__cdecl* GAME_IssuePointOrder) (jHANDLE, jSTRING, float*, float*);
typedef bool(__cdecl* GAME_IssuePointOrderLoc) (jHANDLE, jSTRING, jHANDLE);
typedef bool(__cdecl* GAME_IssueTargetOrder) (jHANDLE, jSTRING, jHANDLE);
typedef bool(__cdecl* GAME_IssueInstantPointOrder) (jHANDLE, jSTRING, float*, float*, jHANDLE);
typedef bool(__cdecl* GAME_IssueInstantTargetOrder) (jHANDLE, jSTRING, jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IssueBuildOrder) (jHANDLE, jSTRING, float*, float*);
typedef bool(__cdecl* GAME_IssueNeutralImmediateOrder) (jHANDLE, jHANDLE, jSTRING);
typedef bool(__cdecl* GAME_IssueNeutralPointOrder) (jHANDLE, jHANDLE, jSTRING, float*, float*);
typedef bool(__cdecl* GAME_IssueNeutralTargetOrder) (jHANDLE, jHANDLE, jSTRING, jHANDLE);
typedef int(__cdecl* GAME_WaygateGetDestinationX) (jHANDLE);
typedef int(__cdecl* GAME_WaygateGetDestinationY) (jHANDLE);
typedef void(__cdecl* GAME_WaygateSetDestination) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_WaygateActivate) (jHANDLE, int);
typedef bool(__cdecl* GAME_WaygateIsActive) (jHANDLE);
typedef void(__cdecl* GAME_AddItemToAllStock) (int, int, int);
typedef void(__cdecl* GAME_AddItemToStock) (jHANDLE, int, int, int);
typedef void(__cdecl* GAME_AddUnitToAllStock) (int, int, int);
typedef void(__cdecl* GAME_AddUnitToStock) (jHANDLE, int, int, int);
typedef void(__cdecl* GAME_RemoveItemFromAllStock) (int);
typedef void(__cdecl* GAME_RemoveItemFromStock) (jHANDLE, int);
typedef void(__cdecl* GAME_RemoveUnitFromAllStock) (int);
typedef void(__cdecl* GAME_RemoveUnitFromStock) (jHANDLE, int);
typedef void(__cdecl* GAME_SetAllItemTypeSlots) (int);
typedef void(__cdecl* GAME_SetAllUnitTypeSlots) (int);
typedef void(__cdecl* GAME_SetItemTypeSlots) (jHANDLE, int);
typedef void(__cdecl* GAME_SetUnitTypeSlots) (jHANDLE, int);
typedef int(__cdecl* GAME_GetUnitUserData) (jHANDLE);
typedef void(__cdecl* GAME_SetUnitUserData) (jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_CreateItem) (int, float*, float*);
typedef void(__cdecl* GAME_RemoveItem) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetItemPlayer) (jHANDLE);
typedef int(__cdecl* GAME_GetItemTypeId) (jHANDLE);
typedef int(__cdecl* GAME_GetItemX) (jHANDLE);
typedef int(__cdecl* GAME_GetItemY) (jHANDLE);
typedef void(__cdecl* GAME_SetItemPosition) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetItemDropOnDeath) (jHANDLE, int);
typedef void(__cdecl* GAME_SetItemDroppable) (jHANDLE, int);
typedef void(__cdecl* GAME_SetItemPawnable) (jHANDLE, int);
typedef void(__cdecl* GAME_SetItemPlayer) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetItemInvulnerable) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsItemInvulnerable) (jHANDLE);
typedef int(__cdecl* GAME_GetItemLevel) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetItemType) (jHANDLE);
typedef void(__cdecl* GAME_SetItemVisible) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsItemVisible) (jHANDLE);
typedef void(__cdecl* GAME_EnumItemsInRect) (jHANDLE, jHANDLE, jCODE);
typedef bool(__cdecl* GAME_IsItemOwned) (jHANDLE);
typedef bool(__cdecl* GAME_IsItemPowerup) (jHANDLE);
typedef bool(__cdecl* GAME_IsItemSellable) (jHANDLE);
typedef bool(__cdecl* GAME_IsItemPawnable) (jHANDLE);
typedef bool(__cdecl* GAME_IsItemIdPowerup) (int);
typedef bool(__cdecl* GAME_IsItemIdSellable) (int);
typedef bool(__cdecl* GAME_IsItemIdPawnable) (int);
typedef void(__cdecl* GAME_SetItemDropID) (jHANDLE, int);
typedef jSTRING(__cdecl* GAME_GetItemName) (jHANDLE);
typedef int(__cdecl* GAME_GetItemCharges) (jHANDLE);
typedef void(__cdecl* GAME_SetItemCharges) (jHANDLE, int);
typedef int(__cdecl* GAME_GetItemUserData) (jHANDLE);
typedef void(__cdecl* GAME_SetItemUserData) (jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_Player) (int);
typedef jHANDLE(__cdecl* GAME_GetLocalPlayer) ();
typedef bool(__cdecl* GAME_IsPlayerAlly) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsPlayerEnemy) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsPlayerInForce) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsPlayerObserver) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetPlayerRace) (jHANDLE);
typedef int(__cdecl* GAME_GetPlayerId) (jHANDLE);
typedef void(__cdecl* GAME_SetPlayerTechMaxAllowed) (jHANDLE, int, int);
typedef int(__cdecl* GAME_GetPlayerTechMaxAllowed) (jHANDLE, int);
typedef void(__cdecl* GAME_AddPlayerTechResearched) (jHANDLE, int, int);
typedef void(__cdecl* GAME_SetPlayerTechResearched) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_GetPlayerTechResearched) (jHANDLE, int, int);
typedef int(__cdecl* GAME_GetPlayerTechCount) (jHANDLE, int, int);
typedef void(__cdecl* GAME_SetPlayerAbilityAvailable) (jHANDLE, int, int);
typedef int(__cdecl* GAME_GetPlayerUnitCount) (jHANDLE, int);
typedef int(__cdecl* GAME_GetPlayerTypedUnitCount) (jHANDLE, jSTRING, int, int);
typedef int(__cdecl* GAME_GetPlayerStructureCount) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsVisibleToPlayer) (float*, float*, jHANDLE);
typedef bool(__cdecl* GAME_IsLocationVisibleToPlayer) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsFoggedToPlayer) (float*, float*, jHANDLE);
typedef bool(__cdecl* GAME_IsLocationFoggedToPlayer) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_IsMaskedToPlayer) (float*, float*, jHANDLE);
typedef bool(__cdecl* GAME_IsLocationMaskedToPlayer) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_SetPlayerState) (jHANDLE, jHANDLE, int);
typedef int(__cdecl* GAME_GetPlayerState) (jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_GetPlayerScore) (jHANDLE, jHANDLE);
typedef bool(__cdecl* GAME_GetPlayerAlliance) (jHANDLE, jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_RemovePlayer) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_CachePlayerHeroData) (jHANDLE);
typedef int(__cdecl* GAME_GetPlayerHandicap) (jHANDLE);
typedef void(__cdecl* GAME_SetPlayerHandicap) (jHANDLE, float*);
typedef int(__cdecl* GAME_GetPlayerHandicapXP) (jHANDLE);
typedef void(__cdecl* GAME_SetPlayerHandicapXP) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetPlayerUnitsOwner) (jHANDLE, int);
typedef void(__cdecl* GAME_CripplePlayer) (jHANDLE, jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_VersionGet) ();
typedef bool(__cdecl* GAME_VersionCompatible) (jHANDLE);
typedef bool(__cdecl* GAME_VersionSupported) (jHANDLE);
typedef void(__cdecl* GAME_EndGame) (int);
typedef void(__cdecl* GAME_ChangeLevel) (jSTRING, int);
typedef void(__cdecl* GAME_RestartGame) (int);
typedef void(__cdecl* GAME_ReloadGame) ();
typedef void(__cdecl* GAME_LoadGame) (jSTRING, int);
typedef void(__cdecl* GAME_SaveGame) (jSTRING);
typedef bool(__cdecl* GAME_RenameSaveDirectory) (jSTRING, jSTRING);
typedef bool(__cdecl* GAME_RemoveSaveDirectory) (jSTRING);
typedef bool(__cdecl* GAME_CopySaveGame) (jSTRING, jSTRING);
typedef bool(__cdecl* GAME_SaveGameExists) (jSTRING);
typedef void(__cdecl* GAME_SetFloatGameState) (jHANDLE, float*);
typedef int(__cdecl* GAME_GetFloatGameState) (jHANDLE);
typedef void(__cdecl* GAME_SetIntegerGameState) (jHANDLE, int);
typedef int(__cdecl* GAME_GetIntegerGameState) (jHANDLE);
typedef void(__cdecl* GAME_SyncSelections) ();
typedef jHANDLE(__cdecl* GAME_DialogCreate) ();
typedef void(__cdecl* GAME_DialogDestroy) (jHANDLE);
typedef void(__cdecl* GAME_DialogSetAsync) (jHANDLE);
typedef void(__cdecl* GAME_DialogClear) (jHANDLE);
typedef void(__cdecl* GAME_DialogSetMessage) (jHANDLE, jSTRING);
typedef jHANDLE(__cdecl* GAME_DialogAddButton) (jHANDLE, jSTRING, int);
typedef jHANDLE(__cdecl* GAME_DialogAddQuitButton) (jHANDLE, int, jSTRING, int);
typedef void(__cdecl* GAME_DialogDisplay) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetMissionAvailable) (int, int, int);
typedef void(__cdecl* GAME_SetCampaignAvailable) (int, int);
typedef void(__cdecl* GAME_SetCampaignMenuRace) (jHANDLE);
typedef void(__cdecl* GAME_SetCampaignMenuRaceEx) (int);
typedef void(__cdecl* GAME_ForceCampaignSelectScreen) ();
typedef void(__cdecl* GAME_SetOpCinematicAvailable) (int, int);
typedef void(__cdecl* GAME_SetEdCinematicAvailable) (int, int);
typedef void(__cdecl* GAME_SetTutorialCleared) (int);
typedef jHANDLE(__cdecl* GAME_GetDefaultDifficulty) ();
typedef void(__cdecl* GAME_SetDefaultDifficulty) (jHANDLE);
typedef bool(__cdecl* GAME_ReloadGameCachesFromDisk) ();
typedef void(__cdecl* GAME_SetCustomCampaignButtonVisible) (int, int);
typedef bool(__cdecl* GAME_GetCustomCampaignButtonVisible) (int);
typedef void(__cdecl* GAME_DoNotSaveReplay) ();
typedef jHANDLE(__cdecl* GAME_InitGameCache) (jSTRING);
typedef bool(__cdecl* GAME_SaveGameCache) (jHANDLE);
typedef void(__cdecl* GAME_StoreInteger) (jHANDLE, jSTRING, jSTRING, int);
typedef void(__cdecl* GAME_StoreReal) (jHANDLE, jSTRING, jSTRING, float*);
typedef void(__cdecl* GAME_StoreBoolean) (jHANDLE, jSTRING, jSTRING, int);
typedef bool(__cdecl* GAME_StoreUnit) (jHANDLE, jSTRING, jSTRING, jHANDLE);
typedef bool(__cdecl* GAME_StoreString) (jHANDLE, jSTRING, jSTRING, jSTRING);
typedef void(__cdecl* GAME_SaveInteger) (jHANDLE, int, int, int);
typedef void(__cdecl* GAME_SaveReal) (jHANDLE, int, int, float*);
typedef void(__cdecl* GAME_SaveBoolean) (jHANDLE, int, int, int);
typedef bool(__cdecl* GAME_SaveStr) (jHANDLE, int, int, jSTRING);
typedef bool(__cdecl* GAME_SavePlayerHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveWidgetHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveDestructableHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveItemHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveUnitHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveAbilityHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTimerHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveRegionHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTriggerHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTriggerConditionHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTriggerActionHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTriggerEventHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveForceHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveGroupHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveLocationHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveRectHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveBooleanExprHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveSoundHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveEffectHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveUnitPoolHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveItemPoolHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveQuestHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveQuestItemHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveDefeatConditionHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTimerDialogHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveLeaderboardHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveMultiboardHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveMultiboardItemHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTrackableHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveDialogHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveButtonHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveTextTagHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveLightningHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveImageHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveUbersplatHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveFogStateHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveFogModifierHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveAgentHandle) (jHANDLE, int, int, jHANDLE);
typedef bool(__cdecl* GAME_SaveHashtableHandle) (jHANDLE, int, int, jHANDLE);
typedef void(__cdecl* GAME_SyncStoredInteger) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_SyncStoredReal) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_SyncStoredBoolean) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_SyncStoredUnit) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_SyncStoredString) (jHANDLE, jSTRING, jSTRING);
typedef int(__cdecl* GAME_GetStoredInteger) (jHANDLE, jSTRING, jSTRING);
typedef int(__cdecl* GAME_GetStoredReal) (jHANDLE, jSTRING, jSTRING);
typedef bool(__cdecl* GAME_GetStoredBoolean) (jHANDLE, jSTRING, jSTRING);
typedef jHANDLE(__cdecl* GAME_RestoreUnit) (jHANDLE, jSTRING, jSTRING, jHANDLE, float*, float*, float*);
typedef jSTRING(__cdecl* GAME_GetStoredString) (jHANDLE, jSTRING, jSTRING);
typedef bool(__cdecl* GAME_HaveStoredInteger) (jHANDLE, jSTRING, jSTRING);
typedef bool(__cdecl* GAME_HaveStoredReal) (jHANDLE, jSTRING, jSTRING);
typedef bool(__cdecl* GAME_HaveStoredBoolean) (jHANDLE, jSTRING, jSTRING);
typedef bool(__cdecl* GAME_HaveStoredUnit) (jHANDLE, jSTRING, jSTRING);
typedef bool(__cdecl* GAME_HaveStoredString) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_FlushGameCache) (jHANDLE);
typedef void(__cdecl* GAME_FlushStoredMission) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_FlushStoredInteger) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_FlushStoredReal) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_FlushStoredBoolean) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_FlushStoredUnit) (jHANDLE, jSTRING, jSTRING);
typedef void(__cdecl* GAME_FlushStoredString) (jHANDLE, jSTRING, jSTRING);
typedef jHANDLE(__cdecl* GAME_InitHashtable) ();
typedef int(__cdecl* GAME_LoadInteger) (jHANDLE, int, int);
typedef int(__cdecl* GAME_LoadReal) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_LoadBoolean) (jHANDLE, int, int);
typedef jSTRING(__cdecl* GAME_LoadStr) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadPlayerHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadWidgetHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadDestructableHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadItemHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadUnitHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadAbilityHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTimerHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadRegionHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTriggerHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTriggerConditionHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTriggerActionHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTriggerEventHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadForceHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadGroupHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadLocationHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadRectHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadBooleanExprHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadSoundHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadEffectHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadUnitPoolHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadItemPoolHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadQuestHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadQuestItemHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadDefeatConditionHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTimerDialogHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadLeaderboardHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadMultiboardHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadMultiboardItemHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTrackableHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadDialogHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadButtonHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadTextTagHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadLightningHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadImageHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadUbersplatHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadFogStateHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadFogModifierHandle) (jHANDLE, int, int);
typedef jHANDLE(__cdecl* GAME_LoadHashtableHandle) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_HaveSavedInteger) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_HaveSavedReal) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_HaveSavedBoolean) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_HaveSavedString) (jHANDLE, int, int);
typedef bool(__cdecl* GAME_HaveSavedHandle) (jHANDLE, int, int);
typedef void(__cdecl* GAME_RemoveSavedInteger) (jHANDLE, int, int);
typedef void(__cdecl* GAME_RemoveSavedReal) (jHANDLE, int, int);
typedef void(__cdecl* GAME_RemoveSavedBoolean) (jHANDLE, int, int);
typedef void(__cdecl* GAME_RemoveSavedString) (jHANDLE, int, int);
typedef void(__cdecl* GAME_RemoveSavedHandle) (jHANDLE, int, int);
typedef void(__cdecl* GAME_FlushParentHashtable) (jHANDLE);
typedef void(__cdecl* GAME_FlushChildHashtable) (jHANDLE, int);
typedef int(__cdecl* GAME_GetRandomInt) (int, int);
typedef int(__cdecl* GAME_GetRandomReal) (float*, float*);
typedef jHANDLE(__cdecl* GAME_CreateUnitPool) ();
typedef void(__cdecl* GAME_DestroyUnitPool) (jHANDLE);
typedef void(__cdecl* GAME_UnitPoolAddUnitType) (jHANDLE, int, float*);
typedef void(__cdecl* GAME_UnitPoolRemoveUnitType) (jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_PlaceRandomUnit) (jHANDLE, jHANDLE, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_CreateItemPool) ();
typedef void(__cdecl* GAME_DestroyItemPool) (jHANDLE);
typedef void(__cdecl* GAME_ItemPoolAddItemType) (jHANDLE, int, float*);
typedef void(__cdecl* GAME_ItemPoolRemoveItemType) (jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_PlaceRandomItem) (jHANDLE, float*, float*);
typedef int(__cdecl* GAME_ChooseRandomCreep) (int);
typedef int(__cdecl* GAME_ChooseRandomNPBuilding) ();
typedef int(__cdecl* GAME_ChooseRandomItem) (int);
typedef int(__cdecl* GAME_ChooseRandomItemEx) (jHANDLE, int);
typedef void(__cdecl* GAME_SetRandomSeed) (int);
typedef void(__cdecl* GAME_DisplayTextToPlayer) (jHANDLE, float*, float*, jSTRING);
typedef void(__cdecl* GAME_DisplayTimedTextToPlayer) (jHANDLE, float*, float*, float*, jSTRING);
typedef void(__cdecl* GAME_DisplayTimedTextFromPlayer) (jHANDLE, float*, float*, float*, jSTRING);
typedef void(__cdecl* GAME_ClearTextMessages) ();
typedef void(__cdecl* GAME_EnableUserControl) (int);
typedef void(__cdecl* GAME_EnableUserUI) (int);
typedef void(__cdecl* GAME_DisableRestartMission) (int);
typedef void(__cdecl* GAME_ForceUIKey) (jSTRING);
typedef void(__cdecl* GAME_ForceUICancel) ();
typedef void(__cdecl* GAME_DisplayLoadDialog) ();
typedef void(__cdecl* GAME_SetTerrainFog) (float*, float*, float*, float*, float*);
typedef void(__cdecl* GAME_SetUnitFog) (float*, float*, float*, float*, float*);
typedef void(__cdecl* GAME_SetTerrainFogEx) (int, float*, float*, float*, float*, float*, float*);
typedef void(__cdecl* GAME_ResetTerrainFog) ();
typedef void(__cdecl* GAME_SetDayNightModels) (jSTRING, jSTRING);
typedef void(__cdecl* GAME_SetSkyModel) (jSTRING);
typedef void(__cdecl* GAME_SuspendTimeOfDay) (int);
typedef void(__cdecl* GAME_SetTimeOfDayScale) (float*);
typedef int(__cdecl* GAME_GetTimeOfDayScale) ();
typedef void(__cdecl* GAME_ShowInterface) (int, float*);
typedef void(__cdecl* GAME_PauseGame) (int);
typedef void(__cdecl* GAME_PingMinimap) (float*, float*, float*);
typedef void(__cdecl* GAME_PingMinimapEx) (float*, float*, float*, int, int, int, int);
typedef void(__cdecl* GAME_SetIntroShotText) (jSTRING);
typedef void(__cdecl* GAME_SetIntroShotModel) (jSTRING);
typedef void(__cdecl* GAME_EnableOcclusion) (int);
typedef void(__cdecl* GAME_EnableWorldFogBoundary) (int);
typedef void(__cdecl* GAME_PlayModelCinematic) (jSTRING);
typedef void(__cdecl* GAME_PlayCinematic) (jSTRING);
typedef void(__cdecl* GAME_SetAltMinimapIcon) (jSTRING);
typedef jHANDLE(__cdecl* GAME_CreateTextTag) ();
typedef void(__cdecl* GAME_DestroyTextTag) (jHANDLE);
typedef void(__cdecl* GAME_SetTextTagText) (jHANDLE, jSTRING, float*);
typedef void(__cdecl* GAME_SetTextTagPos) (jHANDLE, float*, float*, float*);
typedef void(__cdecl* GAME_SetTextTagPosUnit) (jHANDLE, jHANDLE, float*);
typedef void(__cdecl* GAME_SetTextTagColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_SetTextTagVelocity) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetTextTagVisibility) (jHANDLE, int);
typedef void(__cdecl* GAME_SetTextTagSuspended) (jHANDLE, int);
typedef void(__cdecl* GAME_SetTextTagPermanent) (jHANDLE, int);
typedef void(__cdecl* GAME_SetTextTagAge) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetTextTagLifespan) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetTextTagFadepoint) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetReservedLocalHeroButtons) (int);
typedef int(__cdecl* GAME_GetAllyColorFilterState) ();
typedef void(__cdecl* GAME_SetAllyColorFilterState) (int);
typedef bool(__cdecl* GAME_GetCreepCampFilterState) ();
typedef void(__cdecl* GAME_SetCreepCampFilterState) (int);
typedef void(__cdecl* GAME_EnableMinimapFilterButtons) (int, int);
typedef void(__cdecl* GAME_EnableDragSelect) (int, int);
typedef void(__cdecl* GAME_EnablePreSelect) (int, int);
typedef void(__cdecl* GAME_EnableSelect) (int, int);
typedef jHANDLE(__cdecl* GAME_CreateTrackable) (jSTRING, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterTrackableHitEvent) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_TriggerRegisterTrackableTrackEvent) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_GetTriggeringTrackable) ();
typedef jHANDLE(__cdecl* GAME_CreateQuest) ();
typedef void(__cdecl* GAME_DestroyQuest) (jHANDLE);
typedef void(__cdecl* GAME_QuestSetTitle) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_QuestSetDescription) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_QuestSetIconPath) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_QuestSetRequired) (jHANDLE, int);
typedef void(__cdecl* GAME_QuestSetCompleted) (jHANDLE, int);
typedef void(__cdecl* GAME_QuestSetDiscovered) (jHANDLE, int);
typedef void(__cdecl* GAME_QuestSetFailed) (jHANDLE, int);
typedef void(__cdecl* GAME_QuestSetEnabled) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsQuestRequired) (jHANDLE);
typedef bool(__cdecl* GAME_IsQuestCompleted) (jHANDLE);
typedef bool(__cdecl* GAME_IsQuestDiscovered) (jHANDLE);
typedef bool(__cdecl* GAME_IsQuestFailed) (jHANDLE);
typedef bool(__cdecl* GAME_IsQuestEnabled) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_QuestCreateItem) (jHANDLE);
typedef void(__cdecl* GAME_QuestItemSetDescription) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_QuestItemSetCompleted) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsQuestItemCompleted) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_CreateDefeatCondition) ();
typedef void(__cdecl* GAME_DestroyDefeatCondition) (jHANDLE);
typedef void(__cdecl* GAME_DefeatConditionSetDescription) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_FlashQuestDialogButton) ();
typedef void(__cdecl* GAME_ForceQuestDialogUpdate) ();
typedef jHANDLE(__cdecl* GAME_CreateTimerDialog) (jHANDLE);
typedef void(__cdecl* GAME_DestroyTimerDialog) (jHANDLE);
typedef void(__cdecl* GAME_TimerDialogSetTitle) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_TimerDialogSetTitleColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_TimerDialogSetTimeColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_TimerDialogSetSpeed) (jHANDLE, float*);
typedef void(__cdecl* GAME_TimerDialogDisplay) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsTimerDialogDisplayed) (jHANDLE);
typedef void(__cdecl* GAME_TimerDialogSetRealTimeRemaining) (jHANDLE, float*);
typedef jHANDLE(__cdecl* GAME_CreateLeaderboard) ();
typedef void(__cdecl* GAME_DestroyLeaderboard) (jHANDLE);
typedef int(__cdecl* GAME_LeaderboardGetItemCount) (jHANDLE);
typedef void(__cdecl* GAME_LeaderboardSetSizeByItemCount) (jHANDLE, int);
typedef void(__cdecl* GAME_LeaderboardAddItem) (jHANDLE, jSTRING, int, jHANDLE);
typedef void(__cdecl* GAME_LeaderboardRemoveItem) (jHANDLE, int);
typedef void(__cdecl* GAME_LeaderboardRemovePlayerItem) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_LeaderboardSortItemsByValue) (jHANDLE, int);
typedef void(__cdecl* GAME_LeaderboardSortItemsByPlayer) (jHANDLE, int);
typedef void(__cdecl* GAME_LeaderboardSortItemsByLabel) (jHANDLE, int);
typedef void(__cdecl* GAME_LeaderboardClear) (jHANDLE);
typedef void(__cdecl* GAME_LeaderboardDisplay) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsLeaderboardDisplayed) (jHANDLE);
typedef jSTRING(__cdecl* GAME_LeaderboardGetLabelText) (jHANDLE);
typedef void(__cdecl* GAME_PlayerSetLeaderboard) (jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_PlayerGetLeaderboard) (jHANDLE);
typedef bool(__cdecl* GAME_LeaderboardHasPlayerItem) (jHANDLE, jHANDLE);
typedef int(__cdecl* GAME_LeaderboardGetPlayerIndex) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_LeaderboardSetLabel) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_LeaderboardSetLabelColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_LeaderboardSetValueColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_LeaderboardSetStyle) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_LeaderboardSetItemValue) (jHANDLE, int, int);
typedef void(__cdecl* GAME_LeaderboardSetItemLabel) (jHANDLE, int, jSTRING);
typedef void(__cdecl* GAME_LeaderboardSetItemStyle) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_LeaderboardSetItemLabelColor) (jHANDLE, int, int, int, int, int);
typedef void(__cdecl* GAME_LeaderboardSetItemValueColor) (jHANDLE, int, int, int, int, int);
typedef jHANDLE(__cdecl* GAME_CreateMultiboard) ();
typedef void(__cdecl* GAME_DestroyMultiboard) (jHANDLE);
typedef void(__cdecl* GAME_MultiboardDisplay) (jHANDLE, int);
typedef void(__cdecl* GAME_MultiboardMinimize) (jHANDLE, int);
typedef bool(__cdecl* GAME_IsMultiboardDisplayed) (jHANDLE);
typedef bool(__cdecl* GAME_IsMultiboardMinimized) (jHANDLE);
typedef void(__cdecl* GAME_MultiboardClear) (jHANDLE);
typedef void(__cdecl* GAME_MultiboardSetTitleText) (jHANDLE, jSTRING);
typedef jSTRING(__cdecl* GAME_MultiboardGetTitleText) (jHANDLE);
typedef void(__cdecl* GAME_MultiboardSetTitleTextColor) (jHANDLE, int, int, int, int);
typedef int(__cdecl* GAME_MultiboardGetRowCount) (jHANDLE);
typedef int(__cdecl* GAME_MultiboardGetColumnCount) (jHANDLE);
typedef void(__cdecl* GAME_MultiboardSetColumnCount) (jHANDLE, int);
typedef void(__cdecl* GAME_MultiboardSetRowCount) (jHANDLE, int);
typedef void(__cdecl* GAME_MultiboardSetItemsStyle) (jHANDLE, int, int);
typedef void(__cdecl* GAME_MultiboardSetItemsValueColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_MultiboardSetItemsValue) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_MultiboardSetItemsWidth) (jHANDLE, float*);
typedef void(__cdecl* GAME_MultiboardSetItemsIcon) (jHANDLE, jSTRING);
typedef jHANDLE(__cdecl* GAME_MultiboardGetItem) (jHANDLE, int, int);
typedef void(__cdecl* GAME_MultiboardReleaseItem) (jHANDLE);
typedef void(__cdecl* GAME_MultiboardSetItemStyle) (jHANDLE, int, int);
typedef void(__cdecl* GAME_MultiboardSetItemValue) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_MultiboardSetItemValueColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_MultiboardSetItemWidth) (jHANDLE, float*);
typedef void(__cdecl* GAME_MultiboardSetItemIcon) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_MultiboardSuppressDisplay) (int);
typedef void(__cdecl* GAME_SetCameraBounds) (float*, float*, float*, float*, float*, float*, float*, float*);
typedef void(__cdecl* GAME_SetCameraPosition) (float*, float*);
typedef void(__cdecl* GAME_SetCameraQuickPosition) (float*, float*);
typedef void(__cdecl* GAME_ResetToGameCamera) (float*);
typedef void(__cdecl* GAME_StopCamera) ();
typedef void(__cdecl* GAME_PanCameraTo) (float*, float*);
typedef void(__cdecl* GAME_PanCameraToTimed) (float*, float*, float*);
typedef void(__cdecl* GAME_PanCameraToWithZ) (float*, float*, float*);
typedef void(__cdecl* GAME_PanCameraToTimedWithZ) (float*, float*, float*, float*);
typedef void(__cdecl* GAME_SetCinematicCamera) (jSTRING);
typedef void(__cdecl* GAME_SetCameraField) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_AdjustCameraField) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetCameraTargetController) (jHANDLE, float*, float*, int);
typedef void(__cdecl* GAME_SetCameraOrientController) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetCameraRotateMode) (float*, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_CreateCameraSetup) ();
typedef void(__cdecl* GAME_CameraSetupSetField) (jHANDLE, jHANDLE, float*, float*);
typedef int(__cdecl* GAME_CameraSetupGetField) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_CameraSetupSetDestPosition) (jHANDLE, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_CameraSetupGetDestPositionLoc) (jHANDLE);
typedef int(__cdecl* GAME_CameraSetupGetDestPositionX) (jHANDLE);
typedef int(__cdecl* GAME_CameraSetupGetDestPositionY) (jHANDLE);
typedef void(__cdecl* GAME_CameraSetupApply) (jHANDLE, int, int);
typedef void(__cdecl* GAME_CameraSetupApplyWithZ) (jHANDLE, float*);
typedef void(__cdecl* GAME_CameraSetupApplyForceDuration) (jHANDLE, int, float*);
typedef void(__cdecl* GAME_CameraSetupApplyForceDurationWithZ) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_CameraSetTargetNoise) (float*, float*);
typedef void(__cdecl* GAME_CameraSetSourceNoise) (float*, float*);
typedef void(__cdecl* GAME_CameraSetTargetNoiseEx) (float*, float*, int);
typedef void(__cdecl* GAME_CameraSetSourceNoiseEx) (float*, float*, int);
typedef void(__cdecl* GAME_CameraSetSmoothingFactor) (float*);
typedef int(__cdecl* GAME_GetCameraMargin) (int);
typedef int(__cdecl* GAME_GetCameraBoundMinX) ();
typedef int(__cdecl* GAME_GetCameraBoundMinY) ();
typedef int(__cdecl* GAME_GetCameraBoundMaxX) ();
typedef int(__cdecl* GAME_GetCameraBoundMaxY) ();
typedef int(__cdecl* GAME_GetCameraField) (jHANDLE);
typedef int(__cdecl* GAME_GetCameraTargetPositionX) ();
typedef int(__cdecl* GAME_GetCameraTargetPositionY) ();
typedef int(__cdecl* GAME_GetCameraTargetPositionZ) ();
typedef jHANDLE(__cdecl* GAME_GetCameraTargetPositionLoc) ();
typedef int(__cdecl* GAME_GetCameraEyePositionX) ();
typedef int(__cdecl* GAME_GetCameraEyePositionY) ();
typedef int(__cdecl* GAME_GetCameraEyePositionZ) ();
typedef jHANDLE(__cdecl* GAME_GetCameraEyePositionLoc) ();
typedef void(__cdecl* GAME_SetCineFilterTexture) (jSTRING);
typedef void(__cdecl* GAME_SetCineFilterBlendMode) (jHANDLE);
typedef void(__cdecl* GAME_SetCineFilterTexMapFlags) (jHANDLE);
typedef void(__cdecl* GAME_SetCineFilterStartUV) (float*, float*, float*, float*);
typedef void(__cdecl* GAME_SetCineFilterEndUV) (float*, float*, float*, float*);
typedef void(__cdecl* GAME_SetCineFilterStartColor) (int, int, int, int);
typedef void(__cdecl* GAME_SetCineFilterEndColor) (int, int, int, int);
typedef void(__cdecl* GAME_SetCineFilterDuration) (float*);
typedef void(__cdecl* GAME_DisplayCineFilter) (int);
typedef bool(__cdecl* GAME_IsCineFilterDisplayed) ();
typedef void(__cdecl* GAME_SetCinematicScene) (int, jHANDLE, jSTRING, jSTRING, float*, float*);
typedef void(__cdecl* GAME_EndCinematicScene) ();
typedef void(__cdecl* GAME_ForceCinematicSubtitles) (int);
typedef void(__cdecl* GAME_NewSoundEnvironment) (jSTRING);
typedef jHANDLE(__cdecl* GAME_CreateSound) (jSTRING, int, int, int, int, int, jSTRING);
typedef jHANDLE(__cdecl* GAME_CreateSoundFilenameWithLabel) (jSTRING, int, int, int, int, int, jSTRING);
typedef jHANDLE(__cdecl* GAME_CreateSoundFromLabel) (jSTRING, int, int, int, int, int);
typedef jHANDLE(__cdecl* GAME_CreateMIDISound) (jSTRING, int, int);
typedef void(__cdecl* GAME_SetStackedSound) (jSTRING, float*, float*);
typedef void(__cdecl* GAME_ClearStackedSound) (jSTRING, float*, float*);
typedef void(__cdecl* GAME_SetStackedSoundRect) (jSTRING, jHANDLE);
typedef void(__cdecl* GAME_ClearStackedSoundRect) (jSTRING, jHANDLE);
typedef void(__cdecl* GAME_SetSoundParamsFromLabel) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_SetSoundChannel) (jHANDLE, int);
typedef void(__cdecl* GAME_SetSoundVolume) (jHANDLE, int);
typedef void(__cdecl* GAME_SetSoundPitch) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetSoundPlayPosition) (jHANDLE, int);
typedef void(__cdecl* GAME_SetSoundDistances) (jHANDLE, float*, float*);
typedef void(__cdecl* GAME_SetSoundDistanceCutoff) (jHANDLE, float*);
typedef void(__cdecl* GAME_SetSoundConeAngles) (jHANDLE, float*, float*, int);
typedef void(__cdecl* GAME_SetSoundConeOrientation) (jHANDLE, float*, float*, float*);
typedef void(__cdecl* GAME_SetSoundPosition) (jHANDLE, float*, float*, float*);
typedef void(__cdecl* GAME_SetSoundVelocity) (jHANDLE, float*, float*, float*);
typedef void(__cdecl* GAME_AttachSoundToUnit) (jHANDLE, jHANDLE);
typedef void(__cdecl* GAME_StartSound) (jHANDLE);
typedef void(__cdecl* GAME_StopSound) (jHANDLE, int, int);
typedef void(__cdecl* GAME_KillSoundWhenDone) (jHANDLE);
typedef void(__cdecl* GAME_SetMapMusic) (jSTRING, int, int);
typedef void(__cdecl* GAME_ClearMapMusic) ();
typedef void(__cdecl* GAME_PlayMusic) (jSTRING);
typedef void(__cdecl* GAME_PlayMusicEx) (jSTRING, int, int);
typedef void(__cdecl* GAME_StopMusic) (int);
typedef void(__cdecl* GAME_ResumeMusic) ();
typedef void(__cdecl* GAME_PlayThematicMusic) (jSTRING);
typedef void(__cdecl* GAME_PlayThematicMusicEx) (jSTRING, int);
typedef void(__cdecl* GAME_EndThematicMusic) ();
typedef void(__cdecl* GAME_SetMusicVolume) (int);
typedef void(__cdecl* GAME_SetMusicPlayPosition) (int);
typedef void(__cdecl* GAME_SetThematicMusicPlayPosition) (int);
typedef void(__cdecl* GAME_SetSoundDuration) (jHANDLE, int);
typedef int(__cdecl* GAME_GetSoundDuration) (jHANDLE);
typedef int(__cdecl* GAME_GetSoundFileDuration) (jSTRING);
typedef void(__cdecl* GAME_VolumeGroupSetVolume) (jHANDLE, float*);
typedef void(__cdecl* GAME_VolumeGroupReset) ();
typedef bool(__cdecl* GAME_GetSoundIsPlaying) (jHANDLE);
typedef bool(__cdecl* GAME_GetSoundIsLoading) (jHANDLE);
typedef void(__cdecl* GAME_RegisterStackedSound) (jHANDLE, int, float*, float*);
typedef void(__cdecl* GAME_UnregisterStackedSound) (jHANDLE, int, float*, float*);
typedef jHANDLE(__cdecl* GAME_AddWeatherEffect) (jHANDLE, int);
typedef void(__cdecl* GAME_RemoveWeatherEffect) (jHANDLE);
typedef void(__cdecl* GAME_EnableWeatherEffect) (jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_TerrainDeformCrater) (float*, float*, float*, float*, int, int);
typedef jHANDLE(__cdecl* GAME_TerrainDeformRipple) (float*, float*, float*, float*, int, int, float*, float*, float*, int);
typedef jHANDLE(__cdecl* GAME_TerrainDeformWave) (float*, float*, float*, float*, float*, float*, float*, float*, int, int);
typedef jHANDLE(__cdecl* GAME_TerrainDeformRandom) (float*, float*, float*, float*, float*, int, int);
typedef void(__cdecl* GAME_TerrainDeformStop) (jHANDLE, int);
typedef void(__cdecl* GAME_TerrainDeformStopAll) ();
typedef void(__cdecl* GAME_DestroyEffect) (jHANDLE);
typedef jHANDLE(__cdecl* GAME_AddSpecialEffect) (jSTRING, float*, float*);
typedef jHANDLE(__cdecl* GAME_AddSpecialEffectLoc) (jSTRING, jHANDLE);
typedef jHANDLE(__cdecl* GAME_AddSpecialEffectTarget) (jSTRING, jHANDLE, jSTRING);
typedef jHANDLE(__cdecl* GAME_AddSpellEffect) (jSTRING, jHANDLE, float*, float*);
typedef jHANDLE(__cdecl* GAME_AddSpellEffectLoc) (jSTRING, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_AddSpellEffectById) (int, jHANDLE, float*, float*);
typedef jHANDLE(__cdecl* GAME_AddSpellEffectByIdLoc) (int, jHANDLE, jHANDLE);
typedef jHANDLE(__cdecl* GAME_AddSpellEffectTarget) (jSTRING, jHANDLE, jHANDLE, jSTRING);
typedef jHANDLE(__cdecl* GAME_AddSpellEffectTargetById) (int, jHANDLE, jHANDLE, jSTRING);
typedef jHANDLE(__cdecl* GAME_AddLightning) (jSTRING, int, float*, float*, float*, float*);
typedef jHANDLE(__cdecl* GAME_AddLightningEx) (jSTRING, int, float*, float*, float*, float*, float*, float*);
typedef bool(__cdecl* GAME_DestroyLightning) (jHANDLE);
typedef int(__cdecl* GAME_GetLightningColorA) (jHANDLE);
typedef int(__cdecl* GAME_GetLightningColorR) (jHANDLE);
typedef int(__cdecl* GAME_GetLightningColorG) (jHANDLE);
typedef int(__cdecl* GAME_GetLightningColorB) (jHANDLE);
typedef bool(__cdecl* GAME_MoveLightning) (jHANDLE, int, float*, float*, float*, float*);
typedef bool(__cdecl* GAME_MoveLightningEx) (jHANDLE, int, float*, float*, float*, float*, float*, float*);
typedef bool(__cdecl* GAME_SetLightningColor) (jHANDLE, float*, float*, float*, float*);
typedef jSTRING(__cdecl* GAME_GetAbilityEffect) (jSTRING, jHANDLE, int);
typedef jSTRING(__cdecl* GAME_GetAbilityEffectById) (int, jHANDLE, int);
typedef jSTRING(__cdecl* GAME_GetAbilitySound) (jSTRING, jHANDLE);
typedef jSTRING(__cdecl* GAME_GetAbilitySoundById) (int, jHANDLE);
typedef int(__cdecl* GAME_GetTerrainCliffLevel) (float*, float*);
typedef void(__cdecl* GAME_SetWaterBaseColor) (int, int, int, int);
typedef void(__cdecl* GAME_SetWaterDeforms) (int);
typedef int(__cdecl* GAME_GetTerrainType) (float*, float*);
typedef int(__cdecl* GAME_GetTerrainVariance) (float*, float*);
typedef void(__cdecl* GAME_SetTerrainType) (float*, float*, int, int, int, int);
typedef bool(__cdecl* GAME_IsTerrainPathable) (float*, float*, jHANDLE);
typedef void(__cdecl* GAME_SetTerrainPathable) (float*, float*, jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_CreateImage) (jSTRING, float*, float*, float*, float*, float*, float*, float*, float*, float*, int);
typedef void(__cdecl* GAME_DestroyImage) (jHANDLE);
typedef void(__cdecl* GAME_ShowImage) (jHANDLE, int);
typedef void(__cdecl* GAME_SetImageConstantHeight) (jHANDLE, int, float*);
typedef void(__cdecl* GAME_SetImagePosition) (jHANDLE, float*, float*, float*);
typedef void(__cdecl* GAME_SetImageColor) (jHANDLE, int, int, int, int);
typedef void(__cdecl* GAME_SetImageRender) (jHANDLE, int);
typedef void(__cdecl* GAME_SetImageRenderAlways) (jHANDLE, int);
typedef void(__cdecl* GAME_SetImageAboveWater) (jHANDLE, int, int);
typedef void(__cdecl* GAME_SetImageType) (jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_CreateUbersplat) (float*, float*, jSTRING, int, int, int, int, int, int);
typedef void(__cdecl* GAME_DestroyUbersplat) (jHANDLE);
typedef void(__cdecl* GAME_ResetUbersplat) (jHANDLE);
typedef void(__cdecl* GAME_FinishUbersplat) (jHANDLE);
typedef void(__cdecl* GAME_ShowUbersplat) (jHANDLE, int);
typedef void(__cdecl* GAME_SetUbersplatRender) (jHANDLE, int);
typedef void(__cdecl* GAME_SetUbersplatRenderAlways) (jHANDLE, int);
typedef void(__cdecl* GAME_SetBlight) (jHANDLE, float*, float*, float*, int);
typedef void(__cdecl* GAME_SetBlightLoc) (jHANDLE, jHANDLE, float*, int);
typedef void(__cdecl* GAME_SetBlightRect) (jHANDLE, jHANDLE, int);
typedef void(__cdecl* GAME_SetBlightPoint) (jHANDLE, float*, float*, int);
typedef jHANDLE(__cdecl* GAME_CreateBlightedGoldmine) (jHANDLE, float*, float*, float*);
typedef bool(__cdecl* GAME_IsPointBlighted) (float*, float*);
typedef void(__cdecl* GAME_SetDoodadAnimation) (float*, float*, float*, int, int, jSTRING, int);
typedef void(__cdecl* GAME_SetDoodadAnimationRect) (jHANDLE, int, jSTRING, int);
typedef void(__cdecl* GAME_StartMeleeAI) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_StartCampaignAI) (jHANDLE, jSTRING);
typedef void(__cdecl* GAME_CommandAI) (jHANDLE, int, int);
typedef void(__cdecl* GAME_PauseCompAI) (jHANDLE, int);
typedef jHANDLE(__cdecl* GAME_GetAIDifficulty) (jHANDLE);
typedef void(__cdecl* GAME_RemoveGuardPosition) (jHANDLE);
typedef void(__cdecl* GAME_RecycleGuardPosition) (jHANDLE);
typedef void(__cdecl* GAME_RemoveAllGuardPositions) (jHANDLE);
typedef void(__cdecl* GAME_ExecuteFunc) (jSTRING);
typedef void(__cdecl* GAME_Cheat) (jSTRING);
typedef bool(__cdecl* GAME_IsNoVictoryCheat) ();
typedef bool(__cdecl* GAME_IsNoDefeatCheat) ();
typedef void(__cdecl* GAME_Preload) (jSTRING);
typedef void(__cdecl* GAME_PreloadEnd) (float*);
typedef void(__cdecl* GAME_PreloadStart) ();
typedef void(__cdecl* GAME_PreloadRefresh) ();
typedef void(__cdecl* GAME_PreloadEndEx) ();
typedef void(__cdecl* GAME_PreloadGenStart) ();
typedef void(__cdecl* GAME_PreloadGenClear) ();
typedef void(__cdecl* GAME_PreloadGenEnd) (jSTRING);
typedef void(__cdecl* GAME_Preloader) (jSTRING);



////////////////////////////////////////////////////////////////////////////////////////////
//Just Functions from wc3 engine

typedef int(__thiscall* T_HandleId2Object) (int hgamestate, int object);
typedef int(__thiscall* T_Object2HandleId) (int hgamestate, int handle);
typedef int(__thiscall* T_GetHandleId) (int addr);
typedef int(__fastcall* T_RegisterNative) (DWORD addr,const char* name, const char* args);
typedef int(__thiscall* T_AllocatePlaceInJTable) (DWORD ptable);
typedef int(__thiscall* T_RegisterFunction) (DWORD jassvm, DWORD func);
typedef int(__thiscall* T_GetJassFuncIdByName) (DWORD jassvm, const char* name);
typedef char*(__thiscall* T_GetJassNameById) (DWORD pdata, int ID);






/*
void SetTextTagText(int t, char *s, float *height);

char *GetUnitName(DWORD hUnit);
char *GetItemName(DWORD hItem);
*/
bool IsItem(DWORD dwItemHandle, char* szItemName);

void IntToRawCode(long int num, char* cToCopy);