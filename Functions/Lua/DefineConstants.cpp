#include <Additional Native Constants.h>
#include <BasicConstants.h>
#include <LuaStates.h>
#include <LuaBridge.h>
#include <LuaEngine.h>
#include "Events.h"
#include <Widescreen.h>
#include <EVENT_INFO.h>
#include <API/KeyHook.h>
#include <API/Unit/UnitNormal.h>

import JassCommonConsts;
import ClassInfoGameBase;
#define _addintvar(var) Const_namespace.addVariable(#var,&var,true)
namespace lua
{
	void BindConsts(TLua& Lua)
	{
		auto Const_namespace = luabridge::getGlobalNamespace(Lua.lua).beginNamespace("AC");
		_addintvar(pJassEnvAddress);
		_addintvar(dwGameState);
		_addintvar(pGameState);
		_addintvar(pConvertString);
		_addintvar(pSearchStringValue);
		_addintvar(pSearchStringAddr1);
		_addintvar(pSearchStringAddr2);
		_addintvar(pGameClass1);
		_addintvar(pGetUnitAddress);
		_addintvar(pGetHandleId);
		_addintvar(pHandleIdToObject);
		_addintvar(pObjectToHandleId);
		_addintvar(pGetDataNode);
		_addintvar(pGetAgentBaseData);
		_addintvar(pToJUnit);
		_addintvar(pUnitData);
		_addintvar(pRedrawUnit);
		_addintvar(pCommonSilence);
		_addintvar(pPauseUnitDisabler);
		_addintvar(pSetStunToUnit);
		_addintvar(pUnsetStunToUnit);
		_addintvar(pSetUnitTexture);
		_addintvar(pGetHeroNeededXP);
		_addintvar(pMorphUnitToTypeId);
		_addintvar(pUpdateHeroBar);
		_addintvar(pRefreshPortraitIfSelected);
		_addintvar(pRefreshInfoBarIfSelected);
		_addintvar(pPointers);
		Const_namespace.addVariable("gspeed", iGSpeed, true);
		_addintvar(pnativescnt);
		_addintvar(GAME_GlobalClass);
		_addintvar(GAME_PrintToScreen);
		_addintvar(pGlobalPlayerClass);

		//MH
		_addintvar(pJassEnvAddress);
		_addintvar(pWriteMemory);
		_addintvar(pPointers);
		_addintvar(pMergeUnits);
		_addintvar(pIgnoredUnits);
		_addintvar(pConvertUnits);
		_addintvar(pMemcpy);
		_addintvar(pGetModuleHandle);
		_addintvar(pGetProcAddress);
		_addintvar(pVirtualAlloc);
		_addintvar(pConvertString);
		_addintvar(pSearchStringValue);
		_addintvar(pSearchStringAddr1);
		_addintvar(pSearchStringAddr2);
		_addintvar(pSprintf);
		_addintvar(pGameState);
		_addintvar(pGameClass1);
		_addintvar(pGetUnitAddress);
		_addintvar(pGetHandleId);
		_addintvar(pHandleIdToObject);
		_addintvar(pObjectToHandleId);
		_addintvar(pGetDataNode);
		_addintvar(pGetAgentBaseData);
		_addintvar(pToJUnit);
		_addintvar(pStorm279);
		_addintvar(pExportFromMPQ);
		_addintvar(pSetObjectAlpha);
		_addintvar(pSetObjectAnimation);
		_addintvar(pExtrasPage);
		_addintvar(pTriggerExecute);
		_addintvar(pGetGameUI);
		_addintvar(pUpdateUI);
		_addintvar(pTextureLoadImageAnyExt);
		_addintvar(pTextureUnloadImage);
		_addintvar(pWorldFrameWar3UI);
		_addintvar(pGetWindowWidth);
		_addintvar(pGetWindowHeight);
		_addintvar(pGetWarcraftWindow);
		_addintvar(pGetAbilityBaseData);
		_addintvar(pGetAbilityBaseUI);
		_addintvar(pStartAbilityCD);
		_addintvar(pSilenceAbility);
		_addintvar(pUnsilenceAbility);
		_addintvar(pGetUnitAbility);
		_addintvar(pStringManager);
		_addintvar(pFDFHashTableList);
		_addintvar(pStringHashNodeGrowListArray);
		_addintvar(pBaseFrameHashNodeGrowListArray);
		_addintvar(pReadFDFFile);
		_addintvar(pDefaultCStatus);
		_addintvar(pGetCFrameByName);
		_addintvar(pCreateCFrame);
		_addintvar(pLoadCBackDropFrameTexture);
		_addintvar(pGetCEditBoxText);
		_addintvar(pSetCEditBoxText);
		_addintvar(pSetCEditBoxFont);
		_addintvar(pSetCEditBoxFocus);
		_addintvar(pFindCLayerUnderCursor);
		_addintvar(pSetCLayerOwner);
		_addintvar(pHideCLayer);
		_addintvar(pShowCLayer);
		_addintvar(pSetCLayerAlpha);
		_addintvar(pSetCLayerFont);
		_addintvar(pSetCLayerTooltip);
		_addintvar(pActiveCLayer);
		_addintvar(pGetCLayoutFrameHeight);
		_addintvar(pSetCLayoutFrameScale);
		_addintvar(pSetCLayoutFramePoint);
		_addintvar(pClearCLayoutFrameAllPoints);
		_addintvar(pSetCLayoutFrameWidth);
		_addintvar(pSetCLayoutFrameHeight);
		_addintvar(pSetCLayoutFrameAbsolutePoint);
		_addintvar(pSetCLayoutFrameCageMouse);
		_addintvar(pSetCLayoutFrameAllPoints);
		_addintvar(pAddCModelFrameModel);
		_addintvar(pGetCModelFrameHeight);
		_addintvar(pCreateCSimpleButton);
		_addintvar(pSetCSimpleButtonState);
		_addintvar(pSetCSimpleButtonStateTexture);
		_addintvar(pCreateCSimpleFont);
		_addintvar(pGetCSimpleFontByName);
		_addintvar(pSetCSimpleFontText);
		_addintvar(pSetCSimpleFontStringFont);
		_addintvar(pGetCSimpleFontStringHeight);
		_addintvar(pSetCSimpleFontStringScale);
		_addintvar(pCreateCSimpleConsole);
		_addintvar(pCreateCSimpleFrame);
		_addintvar(pGetCSimpleFrameByName);
		_addintvar(pSetCSimpleFrameScale);
		_addintvar(pSetCSimpleFramePriority);
		_addintvar(pSetCSimpleFrameParent);
		_addintvar(pSetCSimpleGlueFrameScale);
		_addintvar(pSetCSimpleMessageFrameFont);
		_addintvar(pSetCSimpleRegionVertexColour);
		_addintvar(pSetCSimpleStatusBarTexture);
		_addintvar(pSetCSimpleStatusBarValue);
		_addintvar(pSetCSimpleStatusBarMinMaxValue);
		_addintvar(pCreateCSimpleTexture);
		_addintvar(pFillCSimpleTexture);
		_addintvar(pGetCSimpleTextureByName);
		_addintvar(pSetCSimpleTextureTexture);
		_addintvar(pSetCSliderCurrentValue);
		_addintvar(pSetCSpriteFrameArt);
		_addintvar(pGetCSpriteFrameHeight);
		_addintvar(pSetCSpriteFrameScale);
		_addintvar(pSetCStatusBarArt);
		_addintvar(pSetCStatusBarMinMaxValue);
		_addintvar(pSetCTextAreaText);
		_addintvar(pGetCTextFrameHeight);
		_addintvar(pSetCTextFrameText);
		_addintvar(pSetCTextFrameTextColour);
		_addintvar(pGetAxisZ);
		_addintvar(pGetAgentInternal);
		_addintvar(pGetPressenseTagged);
		_addintvar(pAgentUpdate);
		_addintvar(pSetWidgetPosition);
		_addintvar(pSetWidgetCoordinates);
		_addintvar(pCastAbility);
		_addintvar(pOPLimitPos);
		_addintvar(pGetTooltipFrame);
		_addintvar(pGetFrameSkinByName);
		_addintvar(pDestroyFrame);
		_addintvar(pSetFrameState);
		_addintvar(pClickFrame);
		_addintvar(pUpdateFrame);
		_addintvar(pGetUnitFramePosition);
		_addintvar(pGroupGetUnitByIndex);
		_addintvar(pItemDataNode);
		_addintvar(pStartItemCD);
		_addintvar(pGameClass2);
		_addintvar(pGlobalMouseEvent);
		_addintvar(pGlobalPlayerClass);
		_addintvar(pUnitDataNode);
		_addintvar(pGetUnitUIData);
		_addintvar(pUnitData);
		_addintvar(pRedrawUnit);
		_addintvar(pCommonSilence);
		_addintvar(pPauseUnitDisabler);
		_addintvar(pSetStunToUnit);
		_addintvar(pUnsetStunToUnit);
		_addintvar(pSetUnitTexture);
		_addintvar(pGetHeroNeededXP);
		_addintvar(pMorphUnitToTypeId);
		_addintvar(pUpdateHeroBar);
		_addintvar(pRefreshPortraitIfSelected);
		_addintvar(pRefreshInfoBarIfSelected);
		_addintvar(pStormAllocateMemory);
		_addintvar(pStormFreeMemory);
		_addintvar(pStormGetMemorySize);
		_addintvar(pStormReallocateMemory);
		_addintvar(pGameUI);
		_addintvar(pSetCBackDropFrameTexture);
		_addintvar(pUnitFramePosition);
		_addintvar(pStorm266);
		_addintvar(pStorm293);
		_addintvar(pStorm252);
		_addintvar(pStorm267);
		_addintvar(pStorm590);
		_addintvar(pStorm269);
		_addintvar(pStorm253);
		_addintvar(pStorm265);
		_addintvar(pWidgetUnderCursor);
		_addintvar(hwndwc);
		_addintvar(dwGameDll);
		_addintvar(iswidesceenenabled);
		_addintvar(CustomFovFix);
		Const_namespace.addVariable("keyhook", &KeyboardHooked,false);
		Const_namespace.addVariable("game", &pGameDLL,false);
		_addintvar(dwStormDll);
		Lua.SetIntConst(0, "ANCHOR_TOPLEFT");
		Lua.SetIntConst(1, "ANCHOR_TOP");
		Lua.SetIntConst(2, "ANCHOR_TOPRIGHT");
		Lua.SetIntConst(3, "ANCHOR_LEFT");
		Lua.SetIntConst(4, "ANCHOR_CENTER");
		Lua.SetIntConst(5, "ANCHOR_RIGHT");
		Lua.SetIntConst(6, "ANCHOR_BOTTOMLEFT");
		Lua.SetIntConst(7, "ANCHOR_BOTTOM");
		Lua.SetIntConst(8, "ANCHOR_BOTTOMRIGHT");

	}

	void BindKeyConst(TLua& Lua)
	{
		auto Const_namespace = luabridge::getGlobalNamespace(Lua.lua).beginNamespace("VK");
		Const_namespace.addConstant("LBTN", VK_LBUTTON);
		Const_namespace.addConstant("RBTN", VK_RBUTTON);
		Const_namespace.addConstant("CANCEL", VK_CANCEL);
		Const_namespace.addConstant("MBTN", VK_MBUTTON);
		Const_namespace.addConstant("XBTN1", VK_XBUTTON1);
		Const_namespace.addConstant("XBTN2", VK_XBUTTON2);
		Const_namespace.addConstant("BACK", VK_BACK);
		Const_namespace.addConstant("TAB", VK_TAB);
		Const_namespace.addConstant("CLEAR", VK_CLEAR);
		Const_namespace.addConstant("RETURN", VK_RETURN);
		Const_namespace.addConstant("SHIFT", VK_SHIFT);
		Const_namespace.addConstant("CTRL", VK_CONTROL);
		Const_namespace.addConstant("ALT", VK_MENU);
		Const_namespace.addConstant("PAUSE", VK_PAUSE);
		Const_namespace.addConstant("CAPS", VK_CAPITAL);
		Const_namespace.addConstant("KANA", VK_KANA);
		Const_namespace.addConstant("JUNJA", VK_JUNJA);
		Const_namespace.addConstant("FINAL", VK_FINAL);
		Const_namespace.addConstant("HANJA", VK_HANJA);
		Const_namespace.addConstant("ESC", VK_ESCAPE);
		Const_namespace.addConstant("CONV", VK_CONVERT);
		Const_namespace.addConstant("NCONV", VK_NONCONVERT);
		Const_namespace.addConstant("ACCEPT", VK_ACCEPT);
		Const_namespace.addConstant("MCHANGE", VK_MODECHANGE);
		Const_namespace.addConstant("SPACE", VK_SPACE);
		Const_namespace.addConstant("PAGEUP", VK_PRIOR);
		Const_namespace.addConstant("PAGEDN", VK_NEXT);
		Const_namespace.addConstant("END", VK_END);
		Const_namespace.addConstant("HOME", VK_HOME);
		Const_namespace.addConstant("LEFT", VK_LEFT);
		Const_namespace.addConstant("UP", VK_UP);
		Const_namespace.addConstant("RIGHT", VK_RIGHT);
		Const_namespace.addConstant("DOWN", VK_DOWN);
		Const_namespace.addConstant("SELECT", VK_SELECT);
		Const_namespace.addConstant("PRINT", VK_PRINT);
		Const_namespace.addConstant("EXEC", VK_EXECUTE);
		Const_namespace.addConstant("SSHOT", VK_SNAPSHOT);
		Const_namespace.addConstant("INSERT", VK_INSERT);
		Const_namespace.addConstant("DELETE", VK_DELETE);
		Const_namespace.addConstant("HELP", VK_HELP);
		Const_namespace.addConstant("0", (int)'0');
		Const_namespace.addConstant("1", (int)'1');
		Const_namespace.addConstant("2", (int)'2');
		Const_namespace.addConstant("3", (int)'3');
		Const_namespace.addConstant("4", (int)'4');
		Const_namespace.addConstant("5", (int)'5');
		Const_namespace.addConstant("6", (int)'6');
		Const_namespace.addConstant("7", (int)'7');
		Const_namespace.addConstant("8", (int)'8');
		Const_namespace.addConstant("9", (int)'9');
		Const_namespace.addConstant("A", (int)'A');
		Const_namespace.addConstant("B", (int)'B');
		Const_namespace.addConstant("C", (int)'C');
		Const_namespace.addConstant("D", (int)'D');
		Const_namespace.addConstant("E", (int)'E');
		Const_namespace.addConstant("F", (int)'F');
		Const_namespace.addConstant("G", (int)'G');
		Const_namespace.addConstant("H", (int)'H');
		Const_namespace.addConstant("I", (int)'I');
		Const_namespace.addConstant("J", (int)'J');
		Const_namespace.addConstant("K", (int)'K');
		Const_namespace.addConstant("L", (int)'L');
		Const_namespace.addConstant("M", (int)'M');
		Const_namespace.addConstant("N", (int)'N');
		Const_namespace.addConstant("O", (int)'O');
		Const_namespace.addConstant("P", (int)'P');
		Const_namespace.addConstant("Q", (int)'Q');
		Const_namespace.addConstant("R", (int)'R');
		Const_namespace.addConstant("S", (int)'S');
		Const_namespace.addConstant("T", (int)'T');
		Const_namespace.addConstant("U", (int)'U');
		Const_namespace.addConstant("V", (int)'V');
		Const_namespace.addConstant("W", (int)'W');
		Const_namespace.addConstant("X", (int)'X');
		Const_namespace.addConstant("Y", (int)'Y');
		Const_namespace.addConstant("Z", (int)'Z');
		Const_namespace.addConstant("LWIN", VK_LWIN);
		Const_namespace.addConstant("RWIN", VK_RWIN);
		Const_namespace.addConstant("APPS", VK_APPS);
		Const_namespace.addConstant("SLEEP", VK_SLEEP);
		Const_namespace.addConstant("NPAD0", VK_NUMPAD0);
		Const_namespace.addConstant("NPAD1", VK_NUMPAD1);
		Const_namespace.addConstant("NPAD2", VK_NUMPAD2);
		Const_namespace.addConstant("NPAD3", VK_NUMPAD3);
		Const_namespace.addConstant("NPAD4", VK_NUMPAD4);
		Const_namespace.addConstant("NPAD5", VK_NUMPAD5);
		Const_namespace.addConstant("NPAD6", VK_NUMPAD6);
		Const_namespace.addConstant("NPAD7", VK_NUMPAD7);
		Const_namespace.addConstant("NPAD8", VK_NUMPAD8);
		Const_namespace.addConstant("NPAD9", VK_NUMPAD9);
		Const_namespace.addConstant("MULT", VK_MULTIPLY);
		Const_namespace.addConstant("ADD", VK_ADD);
		Const_namespace.addConstant("SEP", VK_SEPARATOR);
		Const_namespace.addConstant("SUB", VK_SUBTRACT);
		Const_namespace.addConstant("DEC", VK_DECIMAL);
		Const_namespace.addConstant("DIV", VK_DIVIDE);
		Const_namespace.addConstant("F1", VK_F1);
		Const_namespace.addConstant("F2", VK_F2);
		Const_namespace.addConstant("F3", VK_F3);
		Const_namespace.addConstant("F4", VK_F4);
		Const_namespace.addConstant("F5", VK_F5);
		Const_namespace.addConstant("F6", VK_F6);
		Const_namespace.addConstant("F7", VK_F7);
		Const_namespace.addConstant("F8", VK_F8);
		Const_namespace.addConstant("F9", VK_F9);
		Const_namespace.addConstant("F10", VK_F10);
		Const_namespace.addConstant("F11", VK_F11);
		Const_namespace.addConstant("F12", VK_F12);
		Const_namespace.addConstant("F13", VK_F13);
		Const_namespace.addConstant("F14", VK_F14);
		Const_namespace.addConstant("F15", VK_F15);
		Const_namespace.addConstant("F16", VK_F16);
		Const_namespace.addConstant("F17", VK_F17);
		Const_namespace.addConstant("F18", VK_F18);
		Const_namespace.addConstant("F19", VK_F19);
		Const_namespace.addConstant("F20", VK_F20);
		Const_namespace.addConstant("F21", VK_F21);
		Const_namespace.addConstant("F22", VK_F22);
		Const_namespace.addConstant("F23", VK_F23);
		Const_namespace.addConstant("F24", VK_F24);
		Const_namespace.addConstant("NLOCK", VK_NUMLOCK);
		Const_namespace.addConstant("SCRL", VK_SCROLL);
		Const_namespace.addConstant("LSHFT", VK_LSHIFT);
		Const_namespace.addConstant("RSHFT", VK_RSHIFT);
		Const_namespace.addConstant("LCTRL", VK_LCONTROL);
		Const_namespace.addConstant("RCTRL", VK_RCONTROL);
		Const_namespace.addConstant("LALT", VK_LMENU);
		Const_namespace.addConstant("RALT", VK_RMENU);
		Const_namespace.addConstant("BBACK", VK_BROWSER_BACK);
		Const_namespace.addConstant("BFORW", VK_BROWSER_FORWARD);
		Const_namespace.addConstant("BREFR", VK_BROWSER_REFRESH);
		Const_namespace.addConstant("BSTOP", VK_BROWSER_STOP);
		Const_namespace.addConstant("BSEARCH", VK_BROWSER_SEARCH);
		Const_namespace.addConstant("BFAV", VK_BROWSER_FAVORITES);
		Const_namespace.addConstant("BHOME", VK_BROWSER_HOME);
		Const_namespace.addConstant("MUTE", VK_VOLUME_MUTE);
		Const_namespace.addConstant("V_DOWN", VK_VOLUME_DOWN);
		Const_namespace.addConstant("V_UP", VK_VOLUME_UP);
		Const_namespace.addConstant("NEXT", VK_MEDIA_NEXT_TRACK);
		Const_namespace.addConstant("PREV", VK_MEDIA_PREV_TRACK);
		Const_namespace.addConstant("STOP", VK_MEDIA_STOP);
		Const_namespace.addConstant("MPLAY", VK_MEDIA_PLAY_PAUSE);
		Const_namespace.addConstant("MAIL", VK_LAUNCH_MAIL);
		Const_namespace.addConstant("MSEL", VK_LAUNCH_MEDIA_SELECT);
		Const_namespace.addConstant("APP1", VK_LAUNCH_APP1);
		Const_namespace.addConstant("APP2", VK_LAUNCH_APP2);
		Const_namespace.addConstant("OEM_1", VK_OEM_1);
		Const_namespace.addConstant("OEM_P", VK_OEM_PLUS);
		Const_namespace.addConstant("COMMA", VK_OEM_COMMA);
		Const_namespace.addConstant("MINUS", VK_OEM_MINUS);
		Const_namespace.addConstant("PERIOD", VK_OEM_PERIOD);
		Const_namespace.addConstant("OEM_2", VK_OEM_2);
		Const_namespace.addConstant("OEM_3", VK_OEM_3);
		Const_namespace.addConstant("ABNT_C1", 0xC1);
		Const_namespace.addConstant("ABNT_C2", 0xC2);
		Const_namespace.addConstant("OEM_4", VK_OEM_4);
		Const_namespace.addConstant("OEM_5", VK_OEM_5);
		Const_namespace.addConstant("OEM_6", VK_OEM_6);
		Const_namespace.addConstant("OEM_7", VK_OEM_7);
		Const_namespace.addConstant("OEM_8", VK_OEM_8);
		Const_namespace.addConstant("OEM102", VK_OEM_102);
		Const_namespace.addConstant("PROCKEY", VK_PROCESSKEY);
		Const_namespace.addConstant("PACKET", VK_PACKET);
		Const_namespace.addConstant("ATTN", VK_ATTN);
		Const_namespace.addConstant("CRSEL", VK_CRSEL);
		Const_namespace.addConstant("EXSEL", VK_EXSEL);
		Const_namespace.addConstant("EREOF", VK_EREOF);
		Const_namespace.addConstant("PLAY", VK_PLAY);
		Const_namespace.addConstant("ZOOM", VK_ZOOM);
		Const_namespace.addConstant("NONAME", VK_NONAME);
		Const_namespace.addConstant("PA1", VK_PA1);
		Const_namespace.addConstant("OCLEAR", VK_OEM_CLEAR);
	}
#define SetGlobalInt(n) lua_pushnumber(L, n);\
						lua_setglobal(L, #n);
	void SetCommonJass(TLua& Lua)
	{
		lua_State* L = Lua.lua;
		if (L)
		{	
			SetGlobalInt(PLAYER_NEUTRAL_PASSIVE);
			SetGlobalInt(PLAYER_NEUTRAL_AGGRESSIVE);
			SetGlobalInt(PLAYER_COLOR_RED);
			SetGlobalInt(PLAYER_COLOR_BLUE);
			SetGlobalInt(PLAYER_COLOR_CYAN);
			SetGlobalInt(PLAYER_COLOR_PURPLE);
			SetGlobalInt(PLAYER_COLOR_YELLOW);
			SetGlobalInt(PLAYER_COLOR_ORANGE);
			SetGlobalInt(PLAYER_COLOR_GREEN);
			SetGlobalInt(PLAYER_COLOR_PINK);
			SetGlobalInt(PLAYER_COLOR_LIGHT_GRAY);
			SetGlobalInt(PLAYER_COLOR_LIGHT_BLUE);
			SetGlobalInt(PLAYER_COLOR_AQUA);
			SetGlobalInt(PLAYER_COLOR_BROWN);
			SetGlobalInt(RACE_HUMAN);
			SetGlobalInt(RACE_ORC);
			SetGlobalInt(RACE_UNDEAD);
			SetGlobalInt(RACE_NIGHTELF);
			SetGlobalInt(RACE_DEMON);
			SetGlobalInt(RACE_OTHER);
			SetGlobalInt(PLAYER_GAME_RESULT_VICTORY);
			SetGlobalInt(PLAYER_GAME_RESULT_DEFEAT);
			SetGlobalInt(PLAYER_GAME_RESULT_TIE);
			SetGlobalInt(PLAYER_GAME_RESULT_NEUTRAL);
			SetGlobalInt(ALLIANCE_PASSIVE);
			SetGlobalInt(ALLIANCE_HELP_REQUEST);
			SetGlobalInt(ALLIANCE_HELP_RESPONSE);
			SetGlobalInt(ALLIANCE_SHARED_XP);
			SetGlobalInt(ALLIANCE_SHARED_SPELLS);
			SetGlobalInt(ALLIANCE_SHARED_VISION);
			SetGlobalInt(ALLIANCE_SHARED_CONTROL);
			SetGlobalInt(ALLIANCE_SHARED_ADVANCED_CONTROL);
			SetGlobalInt(ALLIANCE_RESCUABLE);
			SetGlobalInt(ALLIANCE_SHARED_VISION_FORCED);
			SetGlobalInt(VERSION_REIGN_OF_CHAOS);
			SetGlobalInt(VERSION_FROZEN_THRONE);
			SetGlobalInt(RACE_PREF_HUMAN);
			SetGlobalInt(RACE_PREF_ORC);
			SetGlobalInt(RACE_PREF_NIGHTELF);
			SetGlobalInt(RACE_PREF_UNDEAD);
			SetGlobalInt(RACE_PREF_DEMON);
			SetGlobalInt(RACE_PREF_RANDOM);
			SetGlobalInt(RACE_PREF_USER_SELECTABLE);
			SetGlobalInt(MAP_CONTROL_USER);
			SetGlobalInt(MAP_CONTROL_COMPUTER);
			SetGlobalInt(MAP_CONTROL_RESCUABLE);
			SetGlobalInt(MAP_CONTROL_NEUTRAL);
			SetGlobalInt(MAP_CONTROL_CREEP);
			SetGlobalInt(MAP_CONTROL_NONE);
			SetGlobalInt(GAME_TYPE_MELEE);
			SetGlobalInt(GAME_TYPE_FFA);
			SetGlobalInt(GAME_TYPE_USE_MAP_SETTINGS);
			SetGlobalInt(GAME_TYPE_BLIZ);
			SetGlobalInt(GAME_TYPE_ONE_ON_ONE);
			SetGlobalInt(GAME_TYPE_TWO_TEAM_PLAY);
			SetGlobalInt(GAME_TYPE_THREE_TEAM_PLAY);
			SetGlobalInt(GAME_TYPE_FOUR_TEAM_PLAY);
			SetGlobalInt(MAP_FOG_HIDE_TERRAIN);
			SetGlobalInt(MAP_FOG_MAP_EXPLORED);
			SetGlobalInt(MAP_FOG_ALWAYS_VISIBLE);
			SetGlobalInt(MAP_USE_HANDICAPS);
			SetGlobalInt(MAP_OBSERVERS);
			SetGlobalInt(MAP_OBSERVERS_ON_DEATH);
			SetGlobalInt(MAP_FIXED_COLORS);
			SetGlobalInt(MAP_LOCK_RESOURCE_TRADING);
			SetGlobalInt(MAP_RESOURCE_TRADING_ALLIES_ONLY);
			SetGlobalInt(MAP_LOCK_ALLIANCE_CHANGES);
			SetGlobalInt(MAP_ALLIANCE_CHANGES_HIDDEN);
			SetGlobalInt(MAP_CHEATS);
			SetGlobalInt(MAP_CHEATS_HIDDEN);
			SetGlobalInt(MAP_LOCK_SPEED);
			SetGlobalInt(MAP_LOCK_RANDOM_SEED);
			SetGlobalInt(MAP_SHARED_ADVANCED_CONTROL);
			SetGlobalInt(MAP_RANDOM_HERO);
			SetGlobalInt(MAP_RANDOM_RACES);
			SetGlobalInt(MAP_RELOADED);
			SetGlobalInt(MAP_PLACEMENT_RANDOM);
			SetGlobalInt(MAP_PLACEMENT_FIXED);
			SetGlobalInt(MAP_PLACEMENT_USE_MAP_SETTINGS);
			SetGlobalInt(MAP_PLACEMENT_TEAMS_TOGETHER);
			SetGlobalInt(MAP_LOC_PRIO_LOW);
			SetGlobalInt(MAP_LOC_PRIO_HIGH);
			SetGlobalInt(MAP_LOC_PRIO_NOT);
			SetGlobalInt(MAP_DENSITY_NONE);
			SetGlobalInt(MAP_DENSITY_LIGHT);
			SetGlobalInt(MAP_DENSITY_MEDIUM);
			SetGlobalInt(MAP_DENSITY_HEAVY);
			SetGlobalInt(MAP_DIFFICULTY_EASY);
			SetGlobalInt(MAP_DIFFICULTY_NORMAL);
			SetGlobalInt(MAP_DIFFICULTY_HARD);
			SetGlobalInt(MAP_DIFFICULTY_INSANE);
			SetGlobalInt(MAP_SPEED_SLOWEST);
			SetGlobalInt(MAP_SPEED_SLOW);
			SetGlobalInt(MAP_SPEED_NORMAL);
			SetGlobalInt(MAP_SPEED_FAST);
			SetGlobalInt(MAP_SPEED_FASTEST);
			SetGlobalInt(PLAYER_SLOT_STATE_EMPTY);
			SetGlobalInt(PLAYER_SLOT_STATE_PLAYING);
			SetGlobalInt(PLAYER_SLOT_STATE_LEFT);
			SetGlobalInt(SOUND_VOLUMEGROUP_UNITMOVEMENT);
			SetGlobalInt(SOUND_VOLUMEGROUP_UNITSOUNDS);
			SetGlobalInt(SOUND_VOLUMEGROUP_COMBAT);
			SetGlobalInt(SOUND_VOLUMEGROUP_SPELLS);
			SetGlobalInt(SOUND_VOLUMEGROUP_UI);
			SetGlobalInt(SOUND_VOLUMEGROUP_MUSIC);
			SetGlobalInt(SOUND_VOLUMEGROUP_AMBIENTSOUNDS);
			SetGlobalInt(SOUND_VOLUMEGROUP_FIRE);
			SetGlobalInt(GAME_STATE_DIVINE_INTERVENTION);
			SetGlobalInt(GAME_STATE_DISCONNECTED);
			SetGlobalInt(GAME_STATE_TIME_OF_DAY);
			SetGlobalInt(PLAYER_STATE_GAME_RESULT);
			SetGlobalInt(PLAYER_STATE_RESOURCE_GOLD);
			SetGlobalInt(PLAYER_STATE_RESOURCE_LUMBER);
			SetGlobalInt(PLAYER_STATE_RESOURCE_HERO_TOKENS);
			SetGlobalInt(PLAYER_STATE_RESOURCE_FOOD_CAP);
			SetGlobalInt(PLAYER_STATE_RESOURCE_FOOD_USED);
			SetGlobalInt(PLAYER_STATE_FOOD_CAP_CEILING);
			SetGlobalInt(PLAYER_STATE_GIVES_BOUNTY);
			SetGlobalInt(PLAYER_STATE_ALLIED_VICTORY);
			SetGlobalInt(PLAYER_STATE_PLACED);
			SetGlobalInt(PLAYER_STATE_OBSERVER_ON_DEATH);
			SetGlobalInt(PLAYER_STATE_OBSERVER);
			SetGlobalInt(PLAYER_STATE_UNFOLLOWABLE);
			SetGlobalInt(PLAYER_STATE_GOLD_UPKEEP_RATE);
			SetGlobalInt(PLAYER_STATE_LUMBER_UPKEEP_RATE);
			SetGlobalInt(PLAYER_STATE_GOLD_GATHERED);
			SetGlobalInt(PLAYER_STATE_LUMBER_GATHERED);
			SetGlobalInt(PLAYER_STATE_NO_CREEP_SLEEP);
			SetGlobalInt(UNIT_STATE_LIFE);
			SetGlobalInt(UNIT_STATE_MAX_LIFE);
			SetGlobalInt(UNIT_STATE_MANA);
			SetGlobalInt(UNIT_STATE_MAX_MANA);
			SetGlobalInt(AI_DIFFICULTY_NEWBIE);
			SetGlobalInt(AI_DIFFICULTY_NORMAL);
			SetGlobalInt(AI_DIFFICULTY_INSANE);
			SetGlobalInt(EVENT_GAME_VICTORY);
			SetGlobalInt(EVENT_GAME_END_LEVEL);
			SetGlobalInt(EVENT_GAME_VARIABLE_LIMIT);
			SetGlobalInt(EVENT_GAME_STATE_LIMIT);
			SetGlobalInt(EVENT_GAME_TIMER_EXPIRED);
			SetGlobalInt(EVENT_GAME_ENTER_REGION);
			SetGlobalInt(EVENT_GAME_LEAVE_REGION);
			SetGlobalInt(EVENT_GAME_TRACKABLE_HIT);
			SetGlobalInt(EVENT_GAME_TRACKABLE_TRACK);
			SetGlobalInt(EVENT_GAME_SHOW_SKILL);
			SetGlobalInt(EVENT_GAME_BUILD_SUBMENU);
			SetGlobalInt(EVENT_PLAYER_STATE_LIMIT);
			SetGlobalInt(EVENT_PLAYER_ALLIANCE_CHANGED);
			SetGlobalInt(EVENT_PLAYER_DEFEAT);
			SetGlobalInt(EVENT_PLAYER_VICTORY);
			SetGlobalInt(EVENT_PLAYER_LEAVE);
			SetGlobalInt(EVENT_PLAYER_CHAT);
			SetGlobalInt(EVENT_PLAYER_END_CINEMATIC);
			SetGlobalInt(EVENT_PLAYER_UNIT_ATTACKED);
			SetGlobalInt(EVENT_PLAYER_UNIT_RESCUED);
			SetGlobalInt(EVENT_PLAYER_UNIT_DEATH);
			SetGlobalInt(EVENT_PLAYER_UNIT_DECAY);
			SetGlobalInt(EVENT_PLAYER_UNIT_DETECTED);
			SetGlobalInt(EVENT_PLAYER_UNIT_HIDDEN);
			SetGlobalInt(EVENT_PLAYER_UNIT_SELECTED);
			SetGlobalInt(EVENT_PLAYER_UNIT_DESELECTED);
			SetGlobalInt(EVENT_PLAYER_UNIT_CONSTRUCT_START);
			SetGlobalInt(EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL);
			SetGlobalInt(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH);
			SetGlobalInt(EVENT_PLAYER_UNIT_UPGRADE_START);
			SetGlobalInt(EVENT_PLAYER_UNIT_UPGRADE_CANCEL);
			SetGlobalInt(EVENT_PLAYER_UNIT_UPGRADE_FINISH);
			SetGlobalInt(EVENT_PLAYER_UNIT_TRAIN_START);
			SetGlobalInt(EVENT_PLAYER_UNIT_TRAIN_CANCEL);
			SetGlobalInt(EVENT_PLAYER_UNIT_TRAIN_FINISH);
			SetGlobalInt(EVENT_PLAYER_UNIT_RESEARCH_START);
			SetGlobalInt(EVENT_PLAYER_UNIT_RESEARCH_CANCEL);
			SetGlobalInt(EVENT_PLAYER_UNIT_RESEARCH_FINISH);
			SetGlobalInt(EVENT_PLAYER_UNIT_ISSUED_ORDER);
			SetGlobalInt(EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER);
			SetGlobalInt(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER);
			SetGlobalInt(EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER);
			SetGlobalInt(EVENT_PLAYER_HERO_LEVEL);
			SetGlobalInt(EVENT_PLAYER_HERO_SKILL);
			SetGlobalInt(EVENT_PLAYER_HERO_REVIVABLE);
			SetGlobalInt(EVENT_PLAYER_HERO_REVIVE_START);
			SetGlobalInt(EVENT_PLAYER_HERO_REVIVE_CANCEL);
			SetGlobalInt(EVENT_PLAYER_HERO_REVIVE_FINISH);
			SetGlobalInt(EVENT_PLAYER_UNIT_SUMMON);
			SetGlobalInt(EVENT_PLAYER_UNIT_DROP_ITEM);
			SetGlobalInt(EVENT_PLAYER_UNIT_PICKUP_ITEM);
			SetGlobalInt(EVENT_PLAYER_UNIT_USE_ITEM);
			SetGlobalInt(EVENT_PLAYER_UNIT_LOADED);
			SetGlobalInt(EVENT_UNIT_DAMAGED);
			SetGlobalInt(EVENT_UNIT_DEATH);
			SetGlobalInt(EVENT_UNIT_DECAY);
			SetGlobalInt(EVENT_UNIT_DETECTED);
			SetGlobalInt(EVENT_UNIT_HIDDEN);
			SetGlobalInt(EVENT_UNIT_SELECTED);
			SetGlobalInt(EVENT_UNIT_DESELECTED);
			SetGlobalInt(EVENT_UNIT_STATE_LIMIT);
			SetGlobalInt(EVENT_UNIT_ACQUIRED_TARGET);
			SetGlobalInt(EVENT_UNIT_TARGET_IN_RANGE);
			SetGlobalInt(EVENT_UNIT_ATTACKED);
			SetGlobalInt(EVENT_UNIT_RESCUED);
			SetGlobalInt(EVENT_UNIT_CONSTRUCT_CANCEL);
			SetGlobalInt(EVENT_UNIT_CONSTRUCT_FINISH);
			SetGlobalInt(EVENT_UNIT_UPGRADE_START);
			SetGlobalInt(EVENT_UNIT_UPGRADE_CANCEL);
			SetGlobalInt(EVENT_UNIT_UPGRADE_FINISH);
			SetGlobalInt(EVENT_UNIT_TRAIN_START);
			SetGlobalInt(EVENT_UNIT_TRAIN_CANCEL);
			SetGlobalInt(EVENT_UNIT_TRAIN_FINISH);
			SetGlobalInt(EVENT_UNIT_RESEARCH_START);
			SetGlobalInt(EVENT_UNIT_RESEARCH_CANCEL);
			SetGlobalInt(EVENT_UNIT_RESEARCH_FINISH);
			SetGlobalInt(EVENT_UNIT_ISSUED_ORDER);
			SetGlobalInt(EVENT_UNIT_ISSUED_POINT_ORDER);
			SetGlobalInt(EVENT_UNIT_ISSUED_TARGET_ORDER);
			SetGlobalInt(EVENT_UNIT_HERO_LEVEL);
			SetGlobalInt(EVENT_UNIT_HERO_SKILL);
			SetGlobalInt(EVENT_UNIT_HERO_REVIVABLE);
			SetGlobalInt(EVENT_UNIT_HERO_REVIVE_START);
			SetGlobalInt(EVENT_UNIT_HERO_REVIVE_CANCEL);
			SetGlobalInt(EVENT_UNIT_HERO_REVIVE_FINISH);
			SetGlobalInt(EVENT_UNIT_SUMMON);
			SetGlobalInt(EVENT_UNIT_DROP_ITEM);
			SetGlobalInt(EVENT_UNIT_PICKUP_ITEM);
			SetGlobalInt(EVENT_UNIT_USE_ITEM);
			SetGlobalInt(EVENT_UNIT_LOADED);
			SetGlobalInt(EVENT_WIDGET_DEATH);
			SetGlobalInt(EVENT_DIALOG_BUTTON_CLICK);
			SetGlobalInt(EVENT_DIALOG_CLICK);
			SetGlobalInt(EVENT_GAME_LOADED);
			SetGlobalInt(EVENT_GAME_TOURNAMENT_FINISH_SOON);
			SetGlobalInt(EVENT_GAME_TOURNAMENT_FINISH_NOW);
			SetGlobalInt(EVENT_GAME_SAVE);
			SetGlobalInt(EVENT_PLAYER_ARROW_LEFT_DOWN);
			SetGlobalInt(EVENT_PLAYER_ARROW_LEFT_UP);
			SetGlobalInt(EVENT_PLAYER_ARROW_RIGHT_DOWN);
			SetGlobalInt(EVENT_PLAYER_ARROW_RIGHT_UP);
			SetGlobalInt(EVENT_PLAYER_ARROW_DOWN_DOWN);
			SetGlobalInt(EVENT_PLAYER_ARROW_DOWN_UP);
			SetGlobalInt(EVENT_PLAYER_ARROW_UP_DOWN);
			SetGlobalInt(EVENT_PLAYER_ARROW_UP_UP);
			SetGlobalInt(EVENT_PLAYER_UNIT_SELL);
			SetGlobalInt(EVENT_PLAYER_UNIT_CHANGE_OWNER);
			SetGlobalInt(EVENT_PLAYER_UNIT_SELL_ITEM);
			SetGlobalInt(EVENT_PLAYER_UNIT_SPELL_CHANNEL);
			SetGlobalInt(EVENT_PLAYER_UNIT_SPELL_CAST);
			SetGlobalInt(EVENT_PLAYER_UNIT_SPELL_EFFECT);
			SetGlobalInt(EVENT_PLAYER_UNIT_SPELL_FINISH);
			SetGlobalInt(EVENT_PLAYER_UNIT_SPELL_ENDCAST);
			SetGlobalInt(EVENT_UNIT_SELL);
			SetGlobalInt(EVENT_UNIT_CHANGE_OWNER);
			SetGlobalInt(EVENT_UNIT_SELL_ITEM);
			SetGlobalInt(EVENT_UNIT_SPELL_CHANNEL);
			SetGlobalInt(EVENT_UNIT_SPELL_CAST);
			SetGlobalInt(EVENT_UNIT_SPELL_EFFECT);
			SetGlobalInt(EVENT_UNIT_SPELL_FINISH);
			SetGlobalInt(EVENT_UNIT_SPELL_ENDCAST);
			SetGlobalInt(LESS_THAN);
			SetGlobalInt(LESS_THAN_OR_EQUAL);
			SetGlobalInt(EQUAL);
			SetGlobalInt(GREATER_THAN_OR_EQUAL);
			SetGlobalInt(GREATER_THAN);
			SetGlobalInt(NOT_EQUAL);
			SetGlobalInt(UNIT_TYPE_HERO);
			SetGlobalInt(UNIT_TYPE_DEAD);
			SetGlobalInt(UNIT_TYPE_STRUCTURE);
			SetGlobalInt(UNIT_TYPE_FLYING);
			SetGlobalInt(UNIT_TYPE_GROUND);
			SetGlobalInt(UNIT_TYPE_ATTACKS_FLYING);
			SetGlobalInt(UNIT_TYPE_ATTACKS_GROUND);
			SetGlobalInt(UNIT_TYPE_MELEE_ATTACKER);
			SetGlobalInt(UNIT_TYPE_RANGED_ATTACKER);
			SetGlobalInt(UNIT_TYPE_GIANT);
			SetGlobalInt(UNIT_TYPE_SUMMONED);
			SetGlobalInt(UNIT_TYPE_STUNNED);
			SetGlobalInt(UNIT_TYPE_PLAGUED);
			SetGlobalInt(UNIT_TYPE_SNARED);
			SetGlobalInt(UNIT_TYPE_UNDEAD);
			SetGlobalInt(UNIT_TYPE_MECHANICAL);
			SetGlobalInt(UNIT_TYPE_PEON);
			SetGlobalInt(UNIT_TYPE_SAPPER);
			SetGlobalInt(UNIT_TYPE_TOWNHALL);
			SetGlobalInt(UNIT_TYPE_ANCIENT);
			SetGlobalInt(ITEM_TYPE_PERMANENT);
			SetGlobalInt(ITEM_TYPE_CHARGED);
			SetGlobalInt(ITEM_TYPE_POWERUP);
			SetGlobalInt(ITEM_TYPE_ARTIFACT);
			SetGlobalInt(ITEM_TYPE_PURCHASABLE);
			SetGlobalInt(ITEM_TYPE_CAMPAIGN);
			SetGlobalInt(ITEM_TYPE_MISCELLANEOUS);
			SetGlobalInt(ITEM_TYPE_UNKNOWN);
			SetGlobalInt(ITEM_TYPE_ANY);
			SetGlobalInt(ITEM_TYPE_TOME);
			SetGlobalInt(CAMERA_FIELD_TARGET_DISTANCE);
			SetGlobalInt(CAMERA_FIELD_FARZ);
			SetGlobalInt(CAMERA_FIELD_ANGLE_OF_ATTACK);
			SetGlobalInt(CAMERA_FIELD_FIELD_OF_VIEW);
			SetGlobalInt(CAMERA_FIELD_ROLL);
			SetGlobalInt(CAMERA_FIELD_ROTATION);
			SetGlobalInt(CAMERA_FIELD_ZOFFSET);
			SetGlobalInt(BLEND_MODE_NONE);
			SetGlobalInt(BLEND_MODE_DONT_CARE);
			SetGlobalInt(BLEND_MODE_KEYALPHA);
			SetGlobalInt(BLEND_MODE_BLEND);
			SetGlobalInt(BLEND_MODE_ADDITIVE);
			SetGlobalInt(BLEND_MODE_MODULATE);
			SetGlobalInt(BLEND_MODE_MODULATE_2X)
			SetGlobalInt(RARITY_FREQUENT);
			SetGlobalInt(RARITY_RARE);
			SetGlobalInt(TEXMAP_FLAG_NONE);
			SetGlobalInt(TEXMAP_FLAG_WRAP_U);
			SetGlobalInt(TEXMAP_FLAG_WRAP_V);
			SetGlobalInt(TEXMAP_FLAG_WRAP_UV);
			SetGlobalInt(FOG_OF_WAR_MASKED);
			SetGlobalInt(FOG_OF_WAR_FOGGED);
			SetGlobalInt(FOG_OF_WAR_VISIBLE);
			SetGlobalInt(CAMERA_MARGIN_LEFT);
			SetGlobalInt(CAMERA_MARGIN_RIGHT);
			SetGlobalInt(CAMERA_MARGIN_TOP);
			SetGlobalInt(CAMERA_MARGIN_BOTTOM);
			SetGlobalInt(EFFECT_TYPE_EFFECT);
			SetGlobalInt(EFFECT_TYPE_TARGET);
			SetGlobalInt(EFFECT_TYPE_CASTER);
			SetGlobalInt(EFFECT_TYPE_SPECIAL);
			SetGlobalInt(NULLIFY_RESULT_NULLED);
			SetGlobalInt(NULLIFY_RESULT_ATKDISABLED);
			SetGlobalInt(NULLIFY_RESULT_EMPTY);
			SetGlobalInt(NULLIFY_RESULT_NULLED);
			SetGlobalInt(CLASS_FLAG_AGENT);
			SetGlobalInt(CLASS_FLAG_FRAME);
			SetGlobalInt(CLASS_FLAG_WIDGET);
			SetGlobalInt(CLASS_FLAG_ABILITY);
			SetGlobalInt(CLASS_FLAG_BULLET);
			SetGlobalInt(CLASS_FLAG_EVENT);
			SetGlobalInt(CLASS_FLAG_INVALID);

			SetGlobalInt(EVENT_ID_CHAT_COMMAND);
			SetGlobalInt(EVENT_ID_SCREEN_UPDATE);
			SetGlobalInt(EVENT_ID_KEY_INPUT);
			SetGlobalInt(EVENT_ID_SCRIPT_LOADED);
			SetGlobalInt(EVENT_ID_UNIT_DAMAGED);
			SetGlobalInt(EVENT_ID_GAME_ENDED);
			SetGlobalInt(EVENT_ID_ON_TICK);

			SetGlobalInt(EVENT_DATA_ID_INPUTED_STRING);
			SetGlobalInt(EVENT_DATA_ID_DAMAGE_SOURCE);
			SetGlobalInt(EVENT_DATA_ID_DAMAGE_TARGET);
			SetGlobalInt(EVENT_DATA_ID_DAMAGE_TYPE);
			SetGlobalInt(EVENT_DATA_ID_ATTACK_TYPE);
			SetGlobalInt(EVENT_DATA_ID_EVENT_DAMAGE);
			SetGlobalInt(EVENT_DATA_ID_DAMAGE_FLAGS);
			SetGlobalInt(EVENT_DATA_ID_INPUTED_KEY);
			SetGlobalInt(EVENT_DATA_ID_INPUTED_KEY_MODE);
			SetGlobalInt(EVENT_DATA_ID_PNETDATA);

		}
	}
}
